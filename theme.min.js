/*
 @vimeo/player v2.8.1 | (c) 2019 Vimeo | MIT License | https://github.com/vimeo/player.js  Pushy - v0.9.2 - 2014-9-13
 Pushy is a responsive off-canvas navigation menu using CSS transforms & transitions.
 https://github.com/christophery/pushy/
 by Christopher Yee */
(function (a) {
    a.fn.hoverIntent = function (b, e, g) {
        var f = { interval: 100, sensitivity: 6, timeout: 50 };
        f = "object" === typeof b ? a.extend(f, b) : a.isFunction(e) ? a.extend(f, { over: b, out: e, selector: g }) : a.extend(f, { over: b, out: b, selector: e });
        var d,
            c,
            k,
            n,
            h = function (r) {
                d = r.pageX;
                c = r.pageY;
            },
            q = function (r, y) {
                y.hoverIntent_t = clearTimeout(y.hoverIntent_t);
                if (Math.sqrt((k - d) * (k - d) + (n - c) * (n - c)) < f.sensitivity) return a(y).off("mousemove.hoverIntent", h), (y.hoverIntent_s = !0), f.over.apply(y, [r]);
                k = d;
                n = c;
                y.hoverIntent_t = setTimeout(function () {
                    q(r, y);
                }, f.interval);
            };
        b = function (r) {
            var y = a.extend({}, r),
                x = this;
            x.hoverIntent_t && (x.hoverIntent_t = clearTimeout(x.hoverIntent_t));
            "mouseenter" === r.type
                ? ((k = y.pageX),
                  (n = y.pageY),
                  a(x).on("mousemove.hoverIntent", h),
                  x.hoverIntent_s ||
                      (x.hoverIntent_t = setTimeout(function () {
                          q(y, x);
                      }, f.interval)))
                : (a(x).off("mousemove.hoverIntent", h),
                  x.hoverIntent_s &&
                      (x.hoverIntent_t = setTimeout(function () {
                          x.hoverIntent_t = clearTimeout(x.hoverIntent_t);
                          x.hoverIntent_s = !1;
                          f.out.apply(x, [y]);
                      }, f.timeout)));
        };
        return this.on({ "mouseenter.hoverIntent": b, "mouseleave.hoverIntent": b }, f.selector);
    };
})(jQuery);


Shopify.Image = {
    preload: function (a, b) {
        for (var e = 0; e < a.length; e++) this.loadImage(this.getSizedImageUrl(a[e], b));
    },
    loadImage: function (a) {
        new Image().src = a;
    },
    switchImage: function (a, b, e) {
        if (a && b) {
            var g = this.imageSize(b.src);
            g = this.getSizedImageUrl(a.src, g);
            e ? e(g, a, b) : (b.src = g);
        }
    },
    imageSize: function (a) {
        a = a.match(/_(1024x1024|2048x2048|pico|icon|thumb|small|compact|medium|large|grande)\./);
        return null != a ? a[1] : null;
    },
    getSizedImageUrl: function (a, b) {
        if (null == b) return a;
        if ("master" == b) return this.removeProtocol(a);
        var e = a.match(/\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\?v=\d+)?$/i);
        return null != e ? ((a = a.split(e[0])), this.removeProtocol(a[0] + "_" + b + e[0])) : null;
    },
    removeProtocol: function (a) {
        return a.replace(/http(s)?:/, "");
    },
};
!(function (a, b) {
    "object" == typeof exports && "undefined" != typeof module ? (module.exports = b()) : "function" == typeof define && define.amd ? define(b) : (((a = a || self).Vimeo = a.Vimeo || {}), (a.Vimeo.Player = b()));
})(this, function () {
    function a(t, l) {
        for (var m = 0; m < l.length; m++) {
            var p = l[m];
            p.enumerable = p.enumerable || !1;
            p.configurable = !0;
            "value" in p && (p.writable = !0);
            Object.defineProperty(t, p.key, p);
        }
    }
    function b(t, l) {
        return 0 === t.indexOf(l.toLowerCase()) ? t : "".concat(l.toLowerCase()).concat(t.substr(0, 1).toUpperCase()).concat(t.substr(1));
    }
    function e(t) {
        return /^(https?:)?\/\/((player|www)\.)?vimeo\.com(?=$|\/)/.test(t);
    }
    function g() {
        var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
            l = t.id;
        t = t.url;
        t = l || t;
        if (!t) throw Error("An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.");
        if (!isNaN(parseFloat(t)) && isFinite(t) && Math.floor(t) == t) return "https://vimeo.com/".concat(t);
        if (e(t)) return t.replace("http:", "https:");
        if (l) throw new TypeError("\u201c".concat(l, "\u201d is not a valid video id."));
        throw new TypeError("\u201c".concat(t, "\u201d is not a vimeo.com url."));
    }
    function f(t, l, m) {
        var p = K.get(t.element) || {};
        l in p || (p[l] = []);
        p[l].push(m);
        K.set(t.element, p);
    }
    function d(t, l) {
        return (K.get(t.element) || {})[l] || [];
    }
    function c(t, l, m) {
        var p = K.get(t.element) || {};
        if (!p[l]) return !0;
        if (!m) return (p[l] = []), K.set(t.element, p), !0;
        m = p[l].indexOf(m);
        return -1 !== m && p[l].splice(m, 1), K.set(t.element, p), p[l] && 0 === p[l].length;
    }
    function k(t) {
        return U.reduce(
            function (l, m) {
                var p = t.getAttribute("data-vimeo-".concat(m));
                return (p || "" === p) && (l[m] = "" === p ? 1 : p), l;
            },
            1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}
        );
    }
    function n(t, l) {
        t = t.html;
        if (!l) throw new TypeError("An element must be provided");
        if (null !== l.getAttribute("data-vimeo-initialized")) return l.querySelector("iframe");
        var m = document.createElement("div");
        return (m.innerHTML = t), l.appendChild(m.firstChild), l.setAttribute("data-vimeo-initialized", "true"), l.querySelector("iframe");
    }
    function h(t) {
        var l = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {},
            m = 2 < arguments.length ? arguments[2] : void 0;
        return new Promise(function (p, v) {
            if (!e(t)) throw new TypeError("\u201c".concat(t, "\u201d is not a vimeo.com url."));
            var u = "https://vimeo.com/api/oembed.json?url=".concat(encodeURIComponent(t), "&domain=").concat(window.location.hostname),
                D;
            for (D in l) l.hasOwnProperty(D) && (u += "&".concat(D, "=").concat(encodeURIComponent(l[D])));
            var B = "XDomainRequest" in window ? new XDomainRequest() : new XMLHttpRequest();
            B.open("GET", u, !0);
            B.onload = function () {
                if (404 !== B.status)
                    if (403 !== B.status)
                        try {
                            var P = JSON.parse(B.responseText);
                            if (403 === P.domain_status_code) return n(P, m), void v(Error("\u201c".concat(t, "\u201d is not embeddable.")));
                            p(P);
                        } catch (N) {
                            v(N);
                        }
                    else v(Error("\u201c".concat(t, "\u201d is not embeddable.")));
                else v(Error("\u201c".concat(t, "\u201d was not found.")));
            };
            B.onerror = function () {
                var P = B.status ? " (".concat(B.status, ")") : "";
                v(Error("There was an error fetching the embed code from Vimeo".concat(P, ".")));
            };
            B.send();
        });
    }
    function q(t) {
        if ("string" == typeof t)
            try {
                t = JSON.parse(t);
            } catch (l) {
                return console.warn(l), {};
            }
        return t;
    }
    function r(t, l, m) {
        t.element.contentWindow &&
            t.element.contentWindow.postMessage &&
            ((l = { method: l }),
            void 0 !== m && (l.value = m),
            (m = parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\d+).*$/, "$1"))),
            8 <= m && 10 > m && (l = JSON.stringify(l)),
            t.element.contentWindow.postMessage(l, t.origin));
    }
    function y(t, l) {
        var m = [];
        if ((l = q(l)).event) {
            "error" === l.event &&
                d(t, l.data.method).forEach(function (u) {
                    var D = Error(l.data.message);
                    D.name = l.data.name;
                    u.reject(D);
                    c(t, l.data.method, u);
                });
            m = d(t, "event:".concat(l.event));
            var p = l.data;
        } else if (l.method) {
            var v = (function (u, D) {
                var B = d(u, D);
                if (1 > B.length) return !1;
                B = B.shift();
                return c(u, D, B), B;
            })(t, l.method);
            v && (m.push(v), (p = l.value));
        }
        m.forEach(function (u) {
            try {
                if ("function" == typeof u) return void u.call(t, p);
                u.resolve(p);
            } catch (D) {}
        });
    }
    var x = "undefined" != typeof global && "[object global]" === {}.toString.call(global),
        F = void 0 !== Array.prototype.indexOf,
        L = "undefined" != typeof window && void 0 !== window.postMessage;
    if (!(x || (F && L))) throw Error("Sorry, the Vimeo Player API is not available in this browser.");
    var z = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
    !(function (t) {
        if (!t.WeakMap) {
            var l = Object.prototype.hasOwnProperty,
                m = function (p, v, u) {
                    Object.defineProperty ? Object.defineProperty(p, v, { configurable: !0, writable: !0, value: u }) : (p[v] = u);
                };
            t.WeakMap = (function () {
                function p() {
                    if (void 0 === this) throw new TypeError("Constructor WeakMap requires 'new'");
                    if ((m(this, "_id", "_WeakMap_" + Math.random().toString().substring(2) + "." + Math.random().toString().substring(2)), 0 < arguments.length)) throw new TypeError("WeakMap iterable is not supported");
                }
                function v(u, D) {
                    if (Object(u) !== u || !l.call(u, "_id")) throw new TypeError(D + " method called on incompatible receiver " + typeof u);
                }
                return (
                    m(p.prototype, "delete", function (u) {
                        if ((v(this, "delete"), Object(u) !== u)) return !1;
                        var D = u[this._id];
                        return !(!D || D[0] !== u) && (delete u[this._id], !0);
                    }),
                    m(p.prototype, "get", function (u) {
                        if ((v(this, "get"), Object(u) === u)) {
                            var D = u[this._id];
                            return D && D[0] === u ? D[1] : void 0;
                        }
                    }),
                    m(p.prototype, "has", function (u) {
                        if ((v(this, "has"), Object(u) !== u)) return !1;
                        var D = u[this._id];
                        return !(!D || D[0] !== u);
                    }),
                    m(p.prototype, "set", function (u, D) {
                        if ((v(this, "set"), Object(u) !== u)) throw new TypeError("Invalid value used as weak map key");
                        var B = u[this._id];
                        return B && B[0] === u ? (B[1] = D) : m(u, this._id, [u, D]), this;
                    }),
                    m(p, "_polyfill", !0),
                    p
                );
            })();
        }
    })("undefined" != typeof self ? self : "undefined" != typeof window ? window : z);
    var w,
        C =
            ((function (t) {
                var l = function () {
                    function m(H, E) {
                        Y.add(H, E);
                        G = G || V(Y.drain);
                    }
                    function p(H) {
                        var E,
                            I = typeof H;
                        return null == H || ("object" != I && "function" != I) || (E = H.then), "function" == typeof E && E;
                    }
                    function v() {
                        for (var H = 0; H < this.chain.length; H++) {
                            var E = void 0,
                                I = void 0,
                                M = 1 === this.state ? this.chain[H].success : this.chain[H].failure,
                                J = this.chain[H];
                            try {
                                !1 === M ? J.reject(this.msg) : (I = !0 === M ? this.msg : M.call(void 0, this.msg)) === J.promise ? J.reject(TypeError("Promise-chain cycle")) : (E = p(I)) ? E.call(I, J.resolve, J.reject) : J.resolve(I);
                            } catch (O) {
                                J.reject(O);
                            }
                        }
                        this.chain.length = 0;
                    }
                    function u(H) {
                        var E = this;
                        E.triggered || ((E.triggered = !0), E.def && (E = E.def), (E.msg = H), (E.state = 2), 0 < E.chain.length && m(v, E));
                    }
                    function D(H, E, I, M) {
                        for (var J = 0; J < E.length; J++)
                            !(function (O) {
                                H.resolve(E[O]).then(function (W) {
                                    I(O, W);
                                }, M);
                            })(J);
                    }
                    function B(H) {
                        this.def = H;
                        this.triggered = !1;
                    }
                    function P(H) {
                        this.promise = H;
                        this.state = 0;
                        this.triggered = !1;
                        this.chain = [];
                        this.msg = void 0;
                    }
                    function N(H) {
                        if ("function" != typeof H) throw TypeError("Not a function");
                        if (0 !== this.__NPO__) throw TypeError("Not a promise");
                        this.__NPO__ = 1;
                        var E = new P(this);
                        this.then = function (I, M) {
                            var J = { success: "function" != typeof I || I, failure: "function" == typeof M && M };
                            return (
                                (J.promise = new this.constructor(function (O, W) {
                                    if ("function" != typeof O || "function" != typeof W) throw TypeError("Not a function");
                                    J.resolve = O;
                                    J.reject = W;
                                })),
                                E.chain.push(J),
                                0 !== E.state && m(v, E),
                                J.promise
                            );
                        };
                        this.catch = function (I) {
                            return this.then(void 0, I);
                        };
                        try {
                            H.call(
                                void 0,
                                function (I) {
                                    (function O(J) {
                                        var W,
                                            Q = this;
                                        if (!Q.triggered) {
                                            Q.triggered = !0;
                                            Q.def && (Q = Q.def);
                                            try {
                                                (W = p(J))
                                                    ? m(function () {
                                                          var X = new B(Q);
                                                          try {
                                                              W.call(
                                                                  J,
                                                                  function () {
                                                                      O.apply(X, arguments);
                                                                  },
                                                                  function () {
                                                                      u.apply(X, arguments);
                                                                  }
                                                              );
                                                          } catch (aa) {
                                                              u.call(X, aa);
                                                          }
                                                      })
                                                    : ((Q.msg = J), (Q.state = 1), 0 < Q.chain.length && m(v, Q));
                                            } catch (X) {
                                                u.call(new B(Q), X);
                                            }
                                        }
                                    }.call(E, I));
                                },
                                function (I) {
                                    u.call(E, I);
                                }
                            );
                        } catch (I) {
                            u.call(E, I);
                        }
                    }
                    var G,
                        A = Object.prototype.toString,
                        V =
                            "undefined" != typeof setImmediate
                                ? function (H) {
                                      return setImmediate(H);
                                  }
                                : setTimeout;
                    try {
                        Object.defineProperty({}, "x", {});
                        var R = function (H, E, I, M) {
                            return Object.defineProperty(H, E, { value: I, writable: !0, configurable: !1 !== M });
                        };
                    } catch (H) {
                        R = function (E, I, M) {
                            return (E[I] = M), E;
                        };
                    }
                    var Y = (function () {
                        function H(J, O) {
                            this.fn = J;
                            this.self = O;
                            this.next = void 0;
                        }
                        var E, I, M;
                        return {
                            add: function (J, O) {
                                M = new H(J, O);
                                I ? (I.next = M) : (E = M);
                                I = M;
                                M = void 0;
                            },
                            drain: function () {
                                var J = E;
                                for (E = I = G = void 0; J; ) J.fn.call(J.self), (J = J.next);
                            },
                        };
                    })();
                    var Z = R({}, "constructor", N, !1);
                    return (
                        R((N.prototype = Z), "__NPO__", 0, !1),
                        R(N, "resolve", function (H) {
                            return H && "object" == typeof H && 1 === H.__NPO__
                                ? H
                                : new this(function (E, I) {
                                      if ("function" != typeof E || "function" != typeof I) throw TypeError("Not a function");
                                      E(H);
                                  });
                        }),
                        R(N, "reject", function (H) {
                            return new this(function (E, I) {
                                if ("function" != typeof E || "function" != typeof I) throw TypeError("Not a function");
                                I(H);
                            });
                        }),
                        R(N, "all", function (H) {
                            var E = this;
                            return "[object Array]" != A.call(H)
                                ? E.reject(TypeError("Not an array"))
                                : 0 === H.length
                                ? E.resolve([])
                                : new E(function (I, M) {
                                      if ("function" != typeof I || "function" != typeof M) throw TypeError("Not a function");
                                      var J = H.length,
                                          O = Array(J),
                                          W = 0;
                                      D(
                                          E,
                                          H,
                                          function (Q, X) {
                                              O[Q] = X;
                                              ++W === J && I(O);
                                          },
                                          M
                                      );
                                  });
                        }),
                        R(N, "race", function (H) {
                            var E = this;
                            return "[object Array]" != A.call(H)
                                ? E.reject(TypeError("Not an array"))
                                : new E(function (I, M) {
                                      if ("function" != typeof I || "function" != typeof M) throw TypeError("Not a function");
                                      D(
                                          E,
                                          H,
                                          function (J, O) {
                                              I(O);
                                          },
                                          M
                                      );
                                  });
                        }),
                        N
                    );
                };
                z.Promise = z.Promise || l();
                t.exports && (t.exports = z.Promise);
            })((w = { exports: {} }), w.exports),
            w.exports),
        K = new WeakMap(),
        U = "autopause autoplay background byline color height id loop maxheight maxwidth muted playsinline portrait responsive speed title transparent url width".split(" "),
        T = new WeakMap(),
        S = new WeakMap();
    F = (function () {
        function t(m) {
            var p,
                v = this,
                u = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
            if (!(this instanceof t)) throw new TypeError("Cannot call a class as a function");
            if (
                (window.jQuery && m instanceof jQuery && (1 < m.length && window.console && console.warn && console.warn("A jQuery object with multiple elements was passed, using the first element."), (m = m[0])),
                "undefined" != typeof document && "string" == typeof m && (m = document.getElementById(m)),
                (p = m),
                !(p && 1 === p.nodeType && "nodeName" in p && p.ownerDocument && p.ownerDocument.defaultView))
            )
                throw new TypeError("You must pass either a valid element or a valid id.");
            var D = m.ownerDocument.defaultView;
            "IFRAME" !== m.nodeName && (p = m.querySelector("iframe")) && (m = p);
            if ("IFRAME" === m.nodeName && !e(m.getAttribute("src") || "")) throw Error("The player element passed isn\u2019t a Vimeo embed.");
            if (T.has(m)) return T.get(m);
            this.element = m;
            this.origin = "*";
            p = new C(function (B, P) {
                var N = function (G) {
                    if (e(G.origin) && v.element.contentWindow === G.source) {
                        "*" === v.origin && (v.origin = G.origin);
                        if ((G = q(G.data)) && "error" === G.event && G.data && "ready" === G.data.method) {
                            var A = Error(G.data.message);
                            return (A.name = G.data.name), void P(A);
                        }
                        A = G && "ping" === G.method;
                        if ((G && "ready" === G.event) || A) return v.element.setAttribute("data-ready", "true"), void B();
                        y(v, G);
                    }
                };
                if ((D.addEventListener ? D.addEventListener("message", N, !1) : D.attachEvent && D.attachEvent("onmessage", N), "IFRAME" !== v.element.nodeName))
                    (N = k(m, u)),
                        h(g(N), N, m)
                            .then(function (G) {
                                var A,
                                    V,
                                    R = n(G, m);
                                return (v.element = R), (v._originalElement = m), (A = m), (V = K.get(A)), K.set(R, V), K.delete(A), T.set(v.element, v), G;
                            })
                            .catch(P);
            });
            return S.set(this, p), T.set(this.element, this), "IFRAME" === this.element.nodeName && r(this, "ping"), this;
        }
        var l;
        return (
            (l = [
                {
                    key: "callMethod",
                    value: function (m) {
                        var p = this,
                            v = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
                        return new C(function (u, D) {
                            return p
                                .ready()
                                .then(function () {
                                    f(p, m, { resolve: u, reject: D });
                                    r(p, m, v);
                                })
                                .catch(D);
                        });
                    },
                },
                {
                    key: "get",
                    value: function (m) {
                        var p = this;
                        return new C(function (v, u) {
                            return (
                                (m = b(m, "get")),
                                p
                                    .ready()
                                    .then(function () {
                                        f(p, m, { resolve: v, reject: u });
                                        r(p, m);
                                    })
                                    .catch(u)
                            );
                        });
                    },
                },
                {
                    key: "set",
                    value: function (m, p) {
                        var v = this;
                        return new C(function (u, D) {
                            if (((m = b(m, "set")), null == p)) throw new TypeError("There must be a value to set.");
                            return v
                                .ready()
                                .then(function () {
                                    f(v, m, { resolve: u, reject: D });
                                    r(v, m, p);
                                })
                                .catch(D);
                        });
                    },
                },
                {
                    key: "on",
                    value: function (m, p) {
                        if (!m) throw new TypeError("You must pass an event name.");
                        if (!p) throw new TypeError("You must pass a callback function.");
                        if ("function" != typeof p) throw new TypeError("The callback must be a function.");
                        0 === d(this, "event:".concat(m)).length && this.callMethod("addEventListener", m).catch(function () {});
                        f(this, "event:".concat(m), p);
                    },
                },
                {
                    key: "off",
                    value: function (m, p) {
                        if (!m) throw new TypeError("You must pass an event name.");
                        if (p && "function" != typeof p) throw new TypeError("The callback must be a function.");
                        c(this, "event:".concat(m), p) && this.callMethod("removeEventListener", m).catch(function (v) {});
                    },
                },
                {
                    key: "loadVideo",
                    value: function (m) {
                        return this.callMethod("loadVideo", m);
                    },
                },
                {
                    key: "ready",
                    value: function () {
                        var m =
                            S.get(this) ||
                            new C(function (p, v) {
                                v(Error("Unknown player. Probably unloaded."));
                            });
                        return C.resolve(m);
                    },
                },
                {
                    key: "addCuePoint",
                    value: function (m) {
                        return this.callMethod("addCuePoint", { time: m, data: 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {} });
                    },
                },
                {
                    key: "removeCuePoint",
                    value: function (m) {
                        return this.callMethod("removeCuePoint", m);
                    },
                },
                {
                    key: "enableTextTrack",
                    value: function (m, p) {
                        if (!m) throw new TypeError("You must pass a language.");
                        return this.callMethod("enableTextTrack", { language: m, kind: p });
                    },
                },
                {
                    key: "disableTextTrack",
                    value: function () {
                        return this.callMethod("disableTextTrack");
                    },
                },
                {
                    key: "pause",
                    value: function () {
                        return this.callMethod("pause");
                    },
                },
                {
                    key: "play",
                    value: function () {
                        return this.callMethod("play");
                    },
                },
                {
                    key: "unload",
                    value: function () {
                        return this.callMethod("unload");
                    },
                },
                {
                    key: "destroy",
                    value: function () {
                        var m = this;
                        return new C(function (p) {
                            S.delete(m);
                            T.delete(m.element);
                            m._originalElement && (T.delete(m._originalElement), m._originalElement.removeAttribute("data-vimeo-initialized"));
                            m.element && "IFRAME" === m.element.nodeName && m.element.parentNode && m.element.parentNode.removeChild(m.element);
                            p();
                        });
                    },
                },
                {
                    key: "getAutopause",
                    value: function () {
                        return this.get("autopause");
                    },
                },
                {
                    key: "setAutopause",
                    value: function (m) {
                        return this.set("autopause", m);
                    },
                },
                {
                    key: "getBuffered",
                    value: function () {
                        return this.get("buffered");
                    },
                },
                {
                    key: "getColor",
                    value: function () {
                        return this.get("color");
                    },
                },
                {
                    key: "setColor",
                    value: function (m) {
                        return this.set("color", m);
                    },
                },
                {
                    key: "getCuePoints",
                    value: function () {
                        return this.get("cuePoints");
                    },
                },
                {
                    key: "getCurrentTime",
                    value: function () {
                        return this.get("currentTime");
                    },
                },
                {
                    key: "setCurrentTime",
                    value: function (m) {
                        return this.set("currentTime", m);
                    },
                },
                {
                    key: "getDuration",
                    value: function () {
                        return this.get("duration");
                    },
                },
                {
                    key: "getEnded",
                    value: function () {
                        return this.get("ended");
                    },
                },
                {
                    key: "getLoop",
                    value: function () {
                        return this.get("loop");
                    },
                },
                {
                    key: "setLoop",
                    value: function (m) {
                        return this.set("loop", m);
                    },
                },
                {
                    key: "getPaused",
                    value: function () {
                        return this.get("paused");
                    },
                },
                {
                    key: "getPlaybackRate",
                    value: function () {
                        return this.get("playbackRate");
                    },
                },
                {
                    key: "setPlaybackRate",
                    value: function (m) {
                        return this.set("playbackRate", m);
                    },
                },
                {
                    key: "getPlayed",
                    value: function () {
                        return this.get("played");
                    },
                },
                {
                    key: "getSeekable",
                    value: function () {
                        return this.get("seekable");
                    },
                },
                {
                    key: "getSeeking",
                    value: function () {
                        return this.get("seeking");
                    },
                },
                {
                    key: "getTextTracks",
                    value: function () {
                        return this.get("textTracks");
                    },
                },
                {
                    key: "getVideoEmbedCode",
                    value: function () {
                        return this.get("videoEmbedCode");
                    },
                },
                {
                    key: "getVideoId",
                    value: function () {
                        return this.get("videoId");
                    },
                },
                {
                    key: "getVideoTitle",
                    value: function () {
                        return this.get("videoTitle");
                    },
                },
                {
                    key: "getVideoWidth",
                    value: function () {
                        return this.get("videoWidth");
                    },
                },
                {
                    key: "getVideoHeight",
                    value: function () {
                        return this.get("videoHeight");
                    },
                },
                {
                    key: "getVideoUrl",
                    value: function () {
                        return this.get("videoUrl");
                    },
                },
                {
                    key: "getVolume",
                    value: function () {
                        return this.get("volume");
                    },
                },
                {
                    key: "setVolume",
                    value: function (m) {
                        return this.set("volume", m);
                    },
                },
            ]),
            a(t.prototype, l),
            t
        );
    })();
    return (
        x ||
            ((function () {
                var t = function (l) {
                    "console" in window && console.error && console.error("There was an error creating an embed: ".concat(l));
                };
                [].slice.call((0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : document).querySelectorAll("[data-vimeo-id], [data-vimeo-url]")).forEach(function (l) {
                    try {
                        if (null === l.getAttribute("data-vimeo-defer")) {
                            var m = k(l);
                            h(g(m), m, l)
                                .then(function (p) {
                                    return n(p, l);
                                })
                                .catch(t);
                        }
                    } catch (p) {
                        t(p);
                    }
                });
            })(),
            (function () {
                var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : document;
                if (!window.VimeoPlayerResizeEmbeds_) {
                    window.VimeoPlayerResizeEmbeds_ = !0;
                    var l = function (m) {
                        if (e(m.origin) && m.data && "spacechange" === m.data.event)
                            for (var p = t.querySelectorAll("iframe"), v = 0; v < p.length; v++)
                                if (p[v].contentWindow === m.source) {
                                    p[v].parentElement.style.paddingBottom = "".concat(m.data.data[0].bottom, "px");
                                    break;
                                }
                    };
                    window.addEventListener ? window.addEventListener("message", l, !1) : window.attachEvent && window.attachEvent("onmessage", l);
                }
            })()),
        F
    );
});
jQuery.cookie = function (a, b, e) {
    if ("undefined" != typeof b) {
        e = e || {};
        null === b && ((b = ""), (e.expires = -1));
        var g = "";
        e.expires && ("number" == typeof e.expires || e.expires.toUTCString) && ("number" == typeof e.expires ? ((g = new Date()), g.setTime(g.getTime() + 864e5 * e.expires)) : (g = e.expires), (g = "; expires=" + g.toUTCString()));
        var f = e.path ? "; path=" + e.path : "",
            d = e.domain ? "; domain=" + e.domain : "";
        e = e.secure ? "; secure" : "";
        document.cookie = [a, "=", encodeURIComponent(b), g, f, d, e].join("");
    } else {
        b = null;
        if (document.cookie && "" != document.cookie)
            for (e = document.cookie.split(";"), g = 0; g < e.length; g++)
                if (((f = jQuery.trim(e[g])), f.substring(0, a.length + 1) == a + "=")) {
                    b = decodeURIComponent(f.substring(a.length + 1));
                    break;
                }
        return b;
    }
};
(function (a) {
    "function" === typeof define && define.amd ? define(["jquery"], a) : "undefined" !== typeof module && module.exports ? (module.exports = a(require("jquery"))) : a(jQuery);
})(function (a) {
    var b = -1,
        e = -1,
        g = function (n) {
            return parseFloat(n) || 0;
        },
        f = function (n) {
            var h = null,
                q = [];
            a(n).each(function () {
                var r = a(this),
                    y = r.offset().top - g(r.css("margin-top")),
                    x = 0 < q.length ? q[q.length - 1] : null;
                null === x ? q.push(r) : 1 >= Math.floor(Math.abs(h - y)) ? (q[q.length - 1] = x.add(r)) : q.push(r);
                h = y;
            });
            return q;
        },
        d = function (n) {
            var h = { byRow: !0, property: "height", target: null, remove: !1 };
            if ("object" === typeof n) return a.extend(h, n);
            "boolean" === typeof n ? (h.byRow = n) : "remove" === n && (h.remove = !0);
            return h;
        },
        c = (a.fn.matchHeight = function (n) {
            n = d(n);
            if (n.remove) {
                var h = this;
                this.css(n.property, "");
                a.each(c._groups, function (q, r) {
                    r.elements = r.elements.not(h);
                });
                return this;
            }
            if (1 >= this.length && !n.target) return this;
            c._groups.push({ elements: this, options: n });
            c._apply(this, n);
            return this;
        });
    c.version = "master";
    c._groups = [];
    c._throttle = 80;
    c._maintainScroll = !0;
    c._beforeUpdate = null;
    c._afterUpdate = null;
    c._rows = f;
    c._parse = g;
    c._parseOptions = d;
    c._apply = function (n, h) {
        var q = d(h);
        n = a(n);
        h = [n];
        var r = a(window).scrollTop(),
            y = a("html").outerHeight(!0),
            x = n.parents().filter(":hidden");
        x.each(function () {
            var F = a(this);
            F.data("style-cache", F.attr("style"));
        });
        x.css("display", "block");
        q.byRow &&
            !q.target &&
            (n.each(function () {
                var F = a(this),
                    L = F.css("display");
                "inline-block" !== L && "flex" !== L && "inline-flex" !== L && (L = "block");
                F.data("style-cache", F.attr("style"));
                F.css({ display: L, "padding-top": "0", "padding-bottom": "0", "margin-top": "0", "margin-bottom": "0", "border-top-width": "0", "border-bottom-width": "0", height: "100px", overflow: "hidden" });
            }),
            (h = f(n)),
            n.each(function () {
                var F = a(this);
                F.attr("style", F.data("style-cache") || "");
            }));
        a.each(h, function (F, L) {
            F = a(L);
            var z = 0;
            if (q.target) z = q.target.outerHeight(!1);
            else {
                if (q.byRow && 1 >= F.length) {
                    F.css(q.property, "");
                    return;
                }
                F.each(function () {
                    var w = a(this),
                        C = w.attr("style"),
                        K = w.css("display");
                    "inline-block" !== K && "flex" !== K && "inline-flex" !== K && (K = "block");
                    K = { display: K };
                    K[q.property] = "";
                    w.css(K);
                    w.outerHeight(!1) > z && (z = w.outerHeight(!1));
                    C ? w.attr("style", C) : w.css("display", "");
                });
            }
            F.each(function () {
                var w = a(this),
                    C = 0;
                (q.target && w.is(q.target)) ||
                    ("border-box" !== w.css("box-sizing") && ((C += g(w.css("border-top-width")) + g(w.css("border-bottom-width"))), (C += g(w.css("padding-top")) + g(w.css("padding-bottom")))), w.css(q.property, z - C + "px"));
            });
        });
        x.each(function () {
            var F = a(this);
            F.attr("style", F.data("style-cache") || null);
        });
        c._maintainScroll && a(window).scrollTop((r / y) * a("html").outerHeight(!0));
        return this;
    };
    c._applyDataApi = function () {
        var n = {};
        a("[data-match-height], [data-mh]").each(function () {
            var h = a(this),
                q = h.attr("data-mh") || h.attr("data-match-height");
            n[q] = q in n ? n[q].add(h) : h;
        });
        a.each(n, function () {
            this.matchHeight(!0);
        });
    };
    var k = function (n) {
        c._beforeUpdate && c._beforeUpdate(n, c._groups);
        a.each(c._groups, function (h) {
            var q = this;
            q.elements.length &&
                setTimeout(function () {
                    c._apply(q.elements, q.options);
                }, 500);
        });
        c._afterUpdate && c._afterUpdate(n, c._groups);
    };
    c._update = function (n, h) {
        if (h && "resize" === h.type) {
            var q = a(window).width();
            if (q === b) return;
            b = q;
        }
        n
            ? -1 === e &&
              (e = setTimeout(function () {
                  k(h);
                  e = -1;
              }, c._throttle))
            : k(h);
    };
    a(c._applyDataApi);
    a(window).bind("load", function (n) {
        c._update(!1, n);
    });
    a(window).bind("resize orientationchange", function (n) {
        c._update(!0, n);
    });
});
"function" != typeof Object.create &&
    (Object.create = function (a) {
        function b() {}
        return (b.prototype = a), new b();
    });
(function (a, b, e) {
    var g = function (f) {
        "undefined" == typeof YT && void 0 === b.loadingPlayer
            ? ((b.loadingPlayer = !0),
              (b.dfd = a.Deferred()),
              (b.onYouTubeIframeAPIReady = function () {
                  b.onYouTubeIframeAPIReady = null;
                  b.dfd.resolve("done");
                  f();
              }))
            : "object" == typeof YT
            ? f()
            : b.dfd.done(function (d) {
                  f();
              });
    };
    YTPlayer = {
        player: null,
        defaults: {
            ratio: 16 / 9,
            videoId: "LSmgKRx5pBo",
            mute: !0,
            repeat: !0,
            width: a(b).width(),
            playButtonClass: "YTPlayer-play",
            pauseButtonClass: "YTPlayer-pause",
            muteButtonClass: "YTPlayer-mute",
            volumeUpClass: "YTPlayer-volume-up",
            volumeDownClass: "YTPlayer-volume-down",
            start: 0,
            pauseOnScroll: !1,
            fitToBackground: !0,
            playerVars: { iv_load_policy: 3, modestbranding: 1, autoplay: 1, controls: 0, showinfo: 0, wmode: "opaque", branding: 0, autohide: 0 },
            events: null,
        },
        init: function (f, d) {
            var c,
                k,
                n,
                h = this;
            return (
                (h.userOptions = d),
                (h.$body = a("body")),
                (h.$node = a(f)),
                (h.$window = a(b)),
                (h.defaults.events = {
                    onReady: function (q) {
                        h.onPlayerReady(q);
                        h.options.pauseOnScroll && h.pauseOnScroll();
                        "function" == typeof h.options.callback && h.options.callback.call(this);
                    },
                    onStateChange: function (q) {
                        1 === q.data ? (h.$node.find("img").fadeOut(400), h.$node.addClass("loaded")) : 0 === q.data && h.options.repeat && h.player.seekTo(h.options.start);
                    },
                }),
                (h.options = a.extend(!0, {}, h.defaults, h.userOptions)),
                (h.options.height = Math.ceil(h.options.width / h.options.ratio)),
                (h.ID = new Date().getTime()),
                (h.holderID = "YTPlayer-ID-" + h.ID),
                h.options.fitToBackground ? h.createBackgroundVideo() : h.createContainerVideo(),
                h.$window.on("resize.YTplayer" + h.ID, function () {
                    h.resize(h);
                }),
                (c = h.onYouTubeIframeAPIReady.bind(h)),
                (k = e.createElement("script")),
                (k.id = "youtube-sdk"),
                (n = e.getElementsByTagName("head")[0]),
                "file://" == b.location.origin ? (k.src = "http://www.youtube.com/iframe_api") : (k.src = "//www.youtube.com/iframe_api"),
                n.appendChild(k),
                console.log(k),
                (n = null),
                (k = null),
                g(c),
                h.resize(h),
                h
            );
        },
        pauseOnScroll: function () {
            var f = this;
            f.$window.on("scroll.YTplayer" + f.ID, function () {
                1 === f.player.getPlayerState() && f.player.pauseVideo();
            });
            f.$window.scrollStopped(function () {
                2 === f.player.getPlayerState() && f.player.playVideo();
            });
        },
        createContainerVideo: function () {
            var f = a(
                '<div id="ytplayer-container' +
                    this.ID +
                    '" >                                    <div id="' +
                    this.holderID +
                    '" class="ytplayer-player-inline"></div>                                     </div>                                     <div id="ytplayer-shield" class="ytplayer-shield"></div>'
            );
            this.$node.append(f);
            this.$YTPlayerString = f;
        },
        createBackgroundVideo: function () {
            var f = a(
                '<div id="ytplayer-container' +
                    this.ID +
                    '" class="ytplayer-container background">                                    <div id="' +
                    this.holderID +
                    '" class="ytplayer-player"></div>                                    </div>                                    <div id="ytplayer-shield" class="ytplayer-shield"></div>'
            );
            this.$node.append(f);
            this.$YTPlayerString = f;
        },
        resize: function (f) {
            var d = a(b);
            f.options.fitToBackground || (d = f.$node);
            var c,
                k,
                n = d.width();
            d = d.height();
            var h = a("#" + f.holderID);
            n / f.options.ratio < d
                ? ((c = Math.ceil(d * f.options.ratio)),
                  h
                      .width(c)
                      .height(d)
                      .css({ left: (n - c) / 2, top: 0 }))
                : ((k = Math.ceil(n / f.options.ratio)),
                  h
                      .width(n)
                      .height(k)
                      .css({ left: 0, top: (d - k) / 2 }));
        },
        onYouTubeIframeAPIReady: function () {
            theme.ProductVideo.youtubeApiLoaded = !0;
            theme.ProductVideo.loadVideos(theme.ProductVideo.hosts.youtube);
            this.player = new b.YT.Player(this.holderID, this.options);
        },
        onPlayerReady: function (f) {
            this.options.mute && f.target.mute();
        },
        getPlayer: function () {
            return this.player;
        },
        destroy: function () {
            this.$node.removeData("yt-init").removeData("ytPlayer").removeClass("loaded");
            this.$YTPlayerString.remove();
            a(b).off("resize.YTplayer" + this.ID);
            a(b).off("scroll.YTplayer" + this.ID);
            this.$YTPlayerString = this.$node = this.$body = null;
            this.player.destroy();
            this.player = null;
        },
    };
    a.fn.scrollStopped = function (f) {
        var d = a(this),
            c = this;
        d.scroll(function () {
            d.data("scrollTimeout") && clearTimeout(d.data("scrollTimeout"));
            d.data("scrollTimeout", setTimeout(f, 250, c));
        });
    };
    a.fn.YTPlayer = function (f) {
        return this.each(function () {
            a(this).data("yt-init", !0);
            var d = Object.create(YTPlayer);
            d.init(this, f);
            a.data(this, "ytPlayer", d);
        });
    };
})(jQuery, window, document);
var initPushyMenu = function () {
    function a() {
        L || (e(), (L = !0));
        $(".left_nav_icons_accordion").addClass("nav_icons_accordion_open");
        g.addClass("pushy-open");
        k.addClass("pushy-active");
        n.addClass("container-push");
        q.addClass("push-push");
        f.addClass("tcon-transform");
        z.close();
        $("a, button, input, select, textarea, object, area, iframe").each(function (w, C) {
            "-1" != $(C).attr("tabindex") && $(C).attr("tabindex", "-2");
        });
        $(".header-nav-pushy a, .header-nav-pushy button").each(function (w, C) {
            $(C).attr("tabindex", 0);
        });
        $(".left_nav_icons_accordion a, .left_nav_icons_accordion select, .left_nav_icons_accordion button").each(function (w, C) {
            $(C).attr("tabindex", 0);
        });
    }
    function b() {
        g.removeClass("pushy-open");
        $(".left_nav_icons_accordion").removeClass("nav_icons_accordion_open");
        k.removeClass("pushy-active");
        n.removeClass("container-push");
        q.removeClass("push-push");
        f.removeClass("tcon-transform");
        $(".header-nav-pushy a, .header-nav-pushy button").each(function (w, C) {
            $(C).attr("tabindex", -1);
        });
        $(".left_nav_icons_accordion a, .left_nav_icons_accordion select").each(function (w, C) {
            $(C).attr("tabindex", -1);
        });
        $("[tabindex]").each(function (w, C) {
            "-2" == $(C).attr("tabindex") && $(C).attr("tabindex", "0");
        });
        0 < $(".minimal-top-nav").length &&
            setTimeout(function () {
                $(".nav-container-actions > li:eq(0)").children().focus();
            }, 10);
    }
    function e() {
        d.removeClass("pushy-open");
        k.removeClass("pushy-active");
        h.removeClass("container-push");
        q.removeClass("push-push");
    }
    var g = $("#pushy-menu"),
        f = $(".pushy-menu-btn"),
        d = $("#pushy-filters"),
        c = $("#pushy-filters-btn"),
        k = $("body,html"),
        n = $("#container, .notification-bar, .nav-main-logo, .nav-container-float"),
        h = $(".container-pushy-main, .page-header, #shopify-section-footer, .notification-bar, .nav-main-logo, .nav-standard, .nav-container-float"),
        q = $(".push"),
        r = $(".site-overlay"),
        y = !0,
        x = $("#pushy-close, .mobile-menu-close-icon"),
        F = $("#pushy-close-filters, .mobile-menu-close-icon"),
        L = !0,
        z = $.magnificPopup.instance;
    f.on("click", function (w) {
        w.preventDefault();
        y ? (a(), (y = !1)) : (b(), (y = !0));
    });
    x.on("click", function (w) {
        w.preventDefault();
        b();
        y = !0;
    });
    F.on("click", function (w) {
        w.preventDefault();
        e();
        L = !0;
    });
    c.on("click", function (w) {
        w.preventDefault();
        L ? (y || (b(), (y = !0)), d.addClass("pushy-open"), k.addClass("pushy-active"), h.addClass("container-push"), q.addClass("push-push"), z.close(), (L = !1)) : (e(), (L = !0));
    });
    r.on("click", function () {
        b();
        y = !0;
        e();
        L = !0;
    });
    return {
        close: function () {
            return e();
        },
    };
};
function inlineSwiper(a) {
    var b = a.attr("data-section-id"),
        e = +a.attr("data-blocks-per-view");
    a.attr("data-blocks-limit");
    a.attr("data-blocks-count");
    var g = 1e3 * +a.attr("data-autoplay"),
        f = g ? { delay: g } : !1;
    a = +a.attr("data-mobile-items") || 1;
    switch (e) {
        case 2:
            var d = 30;
            break;
        case 3:
            d = 25;
            break;
        case 4:
            d = 15;
            break;
        case 5:
            d = 10;
            break;
        default:
            d = 15;
    }
    return new Swiper("#inline-swiper-" + b, {
        direction: "horizontal",
        pagination: { el: "#swiper-pagination-" + b, clickable: !0 },
        loop: !!g,
        slidesPerView: a,
        slidesPerGroup: 1,
        spaceBetween: d,
        simulateTouch: !0,
        breakpoints: { 768: { slidesPerView: e, slidesPerGroup: 1, spaceBetween: 15 } },
        autoplay: f,
    });
}
window.theme = window.theme || {};
theme.Sections = function () {
    this.constructors = {};
    this.instances = [];
    $(document)
        .on("shopify:section:load", this._onSectionLoad.bind(this))
        .on("shopify:section:unload", this._onSectionUnload.bind(this))
        .on("shopify:section:select", this._onSelect.bind(this))
        .on("shopify:section:deselect", this._onDeselect.bind(this))
        .on("shopify:section:reorder", this._onReorder.bind(this))
        .on("shopify:block:select", this._onBlockSelect.bind(this))
        .on("shopify:block:deselect", this._onBlockDeselect.bind(this));
};
theme.Sections.prototype = _.assignIn({}, theme.Sections.prototype, {
    _createInstance: function (a, b) {
        var e = $(a),
            g = e.attr("data-section-id");
        e = e.attr("data-section-type");
        b = b || this.constructors[e];
        _.isUndefined(b) || ((a = _.assignIn(new b(a), { id: g, type: e, container: a })), this.instances.push(a));
    },
    _onSectionLoad: function (a) {
        (a = $("[data-section-id]", a.target)[0]) && this._createInstance(a);
    },
    _onSectionUnload: function (a) {
        this.instances = _.filter(this.instances, function (b) {
            var e = b.id === a.originalEvent.detail.sectionId;
            if (e && _.isFunction(b.onUnload)) b.onUnload(a);
            return !e;
        });
    },
    _onSelect: function (a) {
        var b = _.find(this.instances, function (e) {
            return e.id === a.originalEvent.detail.sectionId;
        });
        if (!_.isUndefined(b) && _.isFunction(b.onSelect)) b.onSelect(a);
    },
    _onDeselect: function (a) {
        var b = _.find(this.instances, function (e) {
            return e.id === a.originalEvent.detail.sectionId;
        });
        if (!_.isUndefined(b) && _.isFunction(b.onDeselect)) b.onDeselect(a);
    },
    _onReorder: function (a) {
        var b = $("#container").find(".shopify-section").first().hasClass("home-slideshow-section"),
            e = $("#top-header-section").data("index-overlap"),
            g = $("#top-header-section").data("bg-color"),
            f = $("#top-header-section").data("logo-width") + "px";
        b && e
            ? ($(".nav-standard-float, .nav-container, .nav-main-logo").css({ position: "absolute", background: "none" }), $(".nav-main-logo img").css("width", f))
            : $(".nav-main-logo, .nav-container, .nav-standard-float").css({ position: "relative", background: g, width: "100%" });
        b = _.find(this.instances, function (d) {
            return d.id === a.originalEvent.detail.sectionId;
        });
        if (!_.isUndefined(b) && _.isFunction(b.onReorder)) b.onReorder(a);
    },
    _onBlockSelect: function (a) {
        var b = _.find(this.instances, function (e) {
            return e.id === a.originalEvent.detail.sectionId;
        });
        if (!_.isUndefined(b) && _.isFunction(b.onBlockSelect)) b.onBlockSelect(a);
    },
    _onBlockDeselect: function (a) {
        var b = _.find(this.instances, function (e) {
            return e.id === a.originalEvent.detail.sectionId;
        });
        if (!_.isUndefined(b) && _.isFunction(b.onBlockDeselect)) b.onBlockDeselect(a);
    },
    register: function (a, b) {
        this.constructors[a] = b;
        $("[data-section-type=" + a + "]").each(
            function (e, g) {
                this._createInstance(g, b);
            }.bind(this)
        );
    },
});
theme.LibraryLoader = (function () {
    function a(f, d) {
        var c = document.createElement("script");
        c.src = f.src;
        c.addEventListener("load", function () {
            f.status = e.loaded;
            d();
        });
        return c;
    }
    function b(f, d) {
        var c = document.createElement("link");
        c.href = f.src;
        c.rel = "stylesheet";
        c.type = "text/css";
        c.addEventListener("load", function () {
            f.status = e.loaded;
            d();
        });
        return c;
    }
    var e = { requested: "requested", loaded: "loaded" },
        g = {
            youtubeSdk: { tagId: "youtube-sdk", src: "https://www.youtube.com/iframe_api", type: "script" },
            plyrShopifyStyles: { tagId: "plyr-shopify-styles", src: "https://cdn.shopify.com/shopifycloud/shopify-plyr/v1.0/shopify-plyr.css", type: "link" },
            modelViewerUiStyles: { tagId: "shopify-model-viewer-ui-styles", src: "https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css", type: "link" },
        };
    return {
        load: function (f, d) {
            if ((f = g[f]) && f.status !== e.requested)
                if (((d = d || function () {}), f.status === e.loaded)) d();
                else {
                    f.status = e.requested;
                    switch (f.type) {
                        case "script":
                            var c = a(f, d);
                            break;
                        case "link":
                            c = b(f, d);
                    }
                    c.id = f.tagId;
                    f.element = c;
                    d = document.getElementsByTagName(f.type)[0];
                    d.parentNode.insertBefore(c, d);
                }
        },
    };
})();
theme.VideoSection = (function () {
    function a(b) {
        b = b.offset().top;
        var e = b + $(this).outerHeight(),
            g = $(window).scrollTop(),
            f = g + $(window).height();
        return e > g && b < f;
    }
    return function (b) {
        function e() {
            if (k.data("ytPlayer")) {
                var h = k.data("ytPlayer").player;
                k.hide();
                h.pauseVideo();
                h.neverPlay = !0;
            } else k.hide();
        }
        var g = (this.$container = $(b)),
            f = (this.sectionId = g.attr("data-section-id")),
            d = (this.videoId = g.attr("data-video-id")),
            c = (this.videoLink = g.attr("data-video-link")),
            k = $("#video-" + f);
        b = $("#video-play-" + f);
        g = this.videoType = g.attr("data-video-type");
        if (992 < $(window).width() && k.length)
            if ("vimeo" == g) {
                var n = new Vimeo.Player("iframe-" + f, { id: d, muted: !0, autoplay: !0, loop: !0, autopause: !1 });
                n.on("loaded", function () {
                    $("#video-" + f + " iframe").length &&
                        ($("#video-" + f).prepend('<div class="vidcover"></div>'),
                        $(window)
                            .resize(function () {
                                var h = $(window).width(),
                                    q = $(window).height(),
                                    r = 1.77777778 * q,
                                    y = h / 1.77777778;
                                1280 < h && y > q && $("#video-" + f + " iframe").css({ width: h, height: y });
                                720 < q && r > h && $("#video-" + f + " iframe").css({ height: q, width: r });
                                $("#video-" + f + " .vidcover").css({ height: q, width: h });
                            })
                            .resize(),
                        a(k) || n.pause(),
                        $(window).on("scroll", function () {
                            a(k) ? (console.log("Video " + d + " playing"), n.play()) : (console.log("Video " + d + " stopped"), n.pause());
                        }));
                });
            } else
                k.YTPlayer({
                    fitToBackground: !0,
                    videoId: d,
                    playerVars: { modestbranding: 1, autoplay: 1, controls: 0, showinfo: 0, branding: 0, rel: 0, iv_load_policy: 3, autohide: 1, wmode: "transparent", frameborder: 0 },
                    callback: function () {
                        var h = k.data("ytPlayer").player;
                        console.log("Video " + d + " loaded");
                        a(k) || h.pauseVideo();
                        $(window).on("scroll", function () {
                            h.neverPlay || (a(k) ? (console.log("Video " + d + " playing"), h.playVideo()) : (console.log("Video " + d + " stopped"), h.pauseVideo()));
                        });
                    },
                });
        else $("#vimeo_iframe_wrapper-" + f).remove();
        b.on("click", function (h) {
            h.preventDefault();
            $.magnificPopup.open({ items: { src: c, type: "iframe" }, callbacks: { open: e, close: e } });
        });
    };
})();
(function (a, b) {
    "function" === typeof define && define.amd ? define([], b) : "object" === typeof exports ? (module.exports = b()) : b();
})(this, function () {
    function a(l) {
        if (null === L) {
            for (var m = l.length, p = 0, v = document.getElementById(d), u = "<ul>"; p < m; ) (u += "<li>" + l[p] + "</li>"), p++;
            v.innerHTML = u + "</ul>";
        } else L(l);
    }
    function b(l) {
        return l
            .replace(/<b[^>]*>(.*?)<\/b>/gi, function (m, p) {
                return p;
            })
            .replace(/class="(?!(tco-hidden|tco-display|tco-ellipsis))+.*?"|data-query-source=".*?"|dir=".*?"|rel=".*?"/gi, "");
    }
    function e(l) {
        l = l.getElementsByTagName("a");
        for (var m = l.length - 1; 0 <= m; m--) l[m].setAttribute("target", "_blank");
    }
    function g(l, m) {
        var p = [];
        m = new RegExp("(^| )" + m + "( |$)");
        l = l.getElementsByTagName("*");
        for (var v = 0, u = l.length; v < u; v++) m.test(l[v].className) && p.push(l[v]);
        return p;
    }
    function f(l) {
        if (void 0 !== l && 0 <= l.innerHTML.indexOf("data-srcset")) return (l = l.innerHTML.match(/data-srcset="([A-z0-9%_\.-]+)/i)[0]), decodeURIComponent(l).split('"')[1];
    }
    var d = "",
        c = 20,
        k = !0,
        n = [],
        h = !1,
        q = !0,
        r = !0,
        y = null,
        x = !0,
        F = !0,
        L = null,
        z = !0,
        w = !1,
        C = !1,
        K = !0,
        U = !0,
        T = !1,
        S = null,
        t = {
            fetch: function (l) {
                void 0 === l.maxTweets && (l.maxTweets = 20);
                void 0 === l.enableLinks && (l.enableLinks = !0);
                void 0 === l.showUser && (l.showUser = !0);
                void 0 === l.showTime && (l.showTime = !0);
                void 0 === l.dateFunction && (l.dateFunction = "default");
                void 0 === l.showRetweet && (l.showRetweet = !0);
                void 0 === l.customCallback && (l.customCallback = null);
                void 0 === l.showInteraction && (l.showInteraction = !0);
                void 0 === l.showImages && (l.showImages = !1);
                void 0 === l.useEmoji && (l.useEmoji = !1);
                void 0 === l.linksInNewWindow && (l.linksInNewWindow = !0);
                void 0 === l.showPermalinks && (l.showPermalinks = !0);
                void 0 === l.dataOnly && (l.dataOnly = !1);
                if (h) n.push(l);
                else {
                    h = !0;
                    d = l.domId;
                    c = l.maxTweets;
                    k = l.enableLinks;
                    r = l.showUser;
                    q = l.showTime;
                    F = l.showRetweet;
                    y = l.dateFunction;
                    L = l.customCallback;
                    z = l.showInteraction;
                    w = l.showImages;
                    C = l.useEmoji;
                    K = l.linksInNewWindow;
                    U = l.showPermalinks;
                    T = l.dataOnly;
                    var m = document.getElementsByTagName("head")[0];
                    null !== S && m.removeChild(S);
                    S = document.createElement("script");
                    S.type = "text/javascript";
                    S.src =
                        void 0 !== l.list
                            ? "https://syndication.twitter.com/timeline/list?callback=__twttrf.callback&dnt=false&list_slug=" +
                              l.list.listSlug +
                              "&screen_name=" +
                              l.list.screenName +
                              "&suppress_response_codes=true&lang=" +
                              (l.lang || "en") +
                              "&rnd=" +
                              Math.random()
                            : void 0 !== l.profile
                            ? "https://syndication.twitter.com/timeline/profile?callback=__twttrf.callback&dnt=false&screen_name=" + l.profile.screenName + "&suppress_response_codes=true&lang=" + (l.lang || "en") + "&rnd=" + Math.random()
                            : void 0 !== l.likes
                            ? "https://syndication.twitter.com/timeline/likes?callback=__twttrf.callback&dnt=false&screen_name=" + l.likes.screenName + "&suppress_response_codes=true&lang=" + (l.lang || "en") + "&rnd=" + Math.random()
                            : "https://cdn.syndication.twimg.com/widgets/timelines/" + l.id + "?&lang=" + (l.lang || "en") + "&callback=__twttrf.callback&suppress_response_codes=true&rnd=" + Math.random();
                    m.appendChild(S);
                }
            },
            callback: function (l) {
                function m(Y) {
                    var Z = Y.getElementsByTagName("img")[0];
                    Z.src = Z.getAttribute("data-src-2x");
                    return Y;
                }
                if (void 0 !== l && void 0 !== l.body) {
                    C || (l.body = l.body.replace(/(<img[^c]*class="Emoji[^>]*>)|(<img[^c]*class="u-block[^>]*>)/g, ""));
                    w || (l.body = l.body.replace(/(<img[^c]*class="NaturalImage-image[^>]*>|(<img[^c]*class="CroppedImage-image[^>]*>))/g, ""));
                    r || (l.body = l.body.replace(/(<img[^c]*class="Avatar"[^>]*>)/g, ""));
                    var p = document.createElement("div");
                    p.innerHTML = l.body;
                    "undefined" === typeof p.getElementsByClassName && (x = !1);
                    l = [];
                    var v = [],
                        u = [],
                        D = [],
                        B = [],
                        P = [],
                        N = [],
                        G = 0;
                    if (x)
                        for (p = p.getElementsByClassName("timeline-Tweet"); G < p.length; ) {
                            0 < p[G].getElementsByClassName("timeline-Tweet-retweetCredit").length ? B.push(!0) : B.push(!1);
                            if (!B[G] || (B[G] && F))
                                l.push(p[G].getElementsByClassName("timeline-Tweet-text")[0]),
                                    P.push(p[G].getAttribute("data-tweet-id")),
                                    r && v.push(m(p[G].getElementsByClassName("timeline-Tweet-author")[0])),
                                    u.push(p[G].getElementsByClassName("dt-updated")[0]),
                                    N.push(p[G].getElementsByClassName("timeline-Tweet-timestamp")[0]),
                                    void 0 !== p[G].getElementsByClassName("timeline-Tweet-media")[0] ? D.push(p[G].getElementsByClassName("timeline-Tweet-media")[0]) : D.push(void 0);
                            G++;
                        }
                    else
                        for (p = g(p, "timeline-Tweet"); G < p.length; ) {
                            0 < g(p[G], "timeline-Tweet-retweetCredit").length ? B.push(!0) : B.push(!1);
                            if (!B[G] || (B[G] && F))
                                l.push(g(p[G], "timeline-Tweet-text")[0]),
                                    P.push(p[G].getAttribute("data-tweet-id")),
                                    r && v.push(m(g(p[G], "timeline-Tweet-author")[0])),
                                    u.push(g(p[G], "dt-updated")[0]),
                                    N.push(g(p[G], "timeline-Tweet-timestamp")[0]),
                                    void 0 !== g(p[G], "timeline-Tweet-media")[0] ? D.push(g(p[G], "timeline-Tweet-media")[0]) : D.push(void 0);
                            G++;
                        }
                    l.length > c && (l.splice(c, l.length - c), v.splice(c, v.length - c), u.splice(c, u.length - c), B.splice(c, B.length - c), D.splice(c, D.length - c), N.splice(c, N.length - c));
                    p = [];
                    G = l.length;
                    var A = 0;
                    if (T)
                        for (; A < G; )
                            p.push({
                                tweet: l[A].innerHTML,
                                author: v[A] ? v[A].innerHTML : "Unknown Author",
                                author_data: {
                                    profile_url: v[A] ? v[A].querySelector('[data-scribe="element:user_link"]').href : null,
                                    profile_image: v[A] ? v[A].querySelector('[data-scribe="element:avatar"]').getAttribute("data-src-1x") : null,
                                    profile_image_2x: v[A] ? v[A].querySelector('[data-scribe="element:avatar"]').getAttribute("data-src-2x") : null,
                                    screen_name: v[A] ? v[A].querySelector('[data-scribe="element:screen_name"]').title : null,
                                    name: v[A] ? v[A].querySelector('[data-scribe="element:name"]').title : null,
                                },
                                time: u[A].textContent,
                                timestamp: u[A].getAttribute("datetime")
                                    .replace("+0000", "Z")
                                    .replace(/([\+\-])(\d\d)(\d\d)/, "$1$2:$3"),
                                image: f(D[A]),
                                rt: B[A],
                                tid: P[A],
                                permalinkURL: void 0 === N[A] ? "" : N[A].href,
                            }),
                                A++;
                    else
                        for (; A < G; ) {
                            if ("string" !== typeof y) {
                                B = u[A].getAttribute("datetime");
                                var V = new Date(u[A].getAttribute("datetime").replace(/-/g, "/").replace("T", " ").split("+")[0]);
                                B = y(V, B);
                                u[A].setAttribute("aria-label", B);
                                if (l[A].textContent)
                                    if (x) u[A].textContent = B;
                                    else {
                                        V = document.createElement("p");
                                        var R = document.createTextNode(B);
                                        V.appendChild(R);
                                        V.setAttribute("aria-label", B);
                                        u[A] = V;
                                    }
                                else u[A].textContent = B;
                            }
                            B = "";
                            k
                                ? (K && (e(l[A]), r && e(v[A])),
                                  r && (B += '<div class="swiper-slide"><div class="tweet-wrapper"><div class="user">' + b(v[A].innerHTML) + "</div>"),
                                  (B += '<p class="tweet">' + b(l[A].innerHTML) + "</p>"),
                                  q && (B = U ? B + ('<p class="timePosted"><a href="' + N[A] + '">' + u[A].getAttribute("aria-label") + "</a></p>") : B + ('<p class="timePosted">' + u[A].getAttribute("aria-label") + "</p>")))
                                : (r && (B += '<p class="user">' + v[A].textContent + "</p>"), (B += '<p class="tweet">' + l[A].textContent + "</p>"), q && (B += '<p class="timePosted">' + u[A].textContent + "</p>"));
                            z &&
                                (B +=
                                    '<p class="interact"><a href="https://twitter.com/intent/tweet?in_reply_to=' +
                                    P[A] +
                                    '" class="twitter_reply_icon"' +
                                    (K ? ' target="_blank">' : ">") +
                                    '</a><a href="https://twitter.com/intent/retweet?tweet_id=' +
                                    P[A] +
                                    '" class="twitter_retweet_icon"' +
                                    (K ? ' target="_blank">' : ">") +
                                    '</a><a href="https://twitter.com/intent/favorite?tweet_id=' +
                                    P[A] +
                                    '" class="twitter_fav_icon"' +
                                    (K ? ' target="_blank">' : ">") +
                                    "</a></p></div></div>");
                            w && void 0 !== D[A] && void 0 !== f(D[A]) && (B += '<div class="media"><img src="' + f(D[A]) + '" alt="Image from tweet" /></div>');
                            w ? p.push(B) : !w && l[A].textContent.length && p.push(B);
                            A++;
                        }
                    a(p);
                }
                h = !1;
                0 < n.length && (t.fetch(n[0]), n.splice(0, 1));
            },
        };
    window.__twttrf = t;
    return (window.twitterFetcher = t);
});
theme.TwitterSection = (function () {
    function a(b) {
        b = Math.floor((new Date() - new Date(b)) / 1e3);
        var e = Math.floor(b / 31536e3),
            g = Math.floor(b / 2592e3),
            f = Math.floor(b / 86400);
        if (548 < f) return e + " years ago";
        if (320 <= f && 547 >= f) return "a year ago";
        if (45 <= f && 319 >= f) return g + " months ago";
        if (26 <= f && 45 >= f) return "a month ago";
        e = Math.floor(b / 3600);
        if (36 <= e && 25 >= f) return f + " days ago";
        if (22 <= e && 35 >= e) return "a day ago";
        f = Math.floor(b / 60);
        if (90 <= f && 21 >= e) return e + " hours ago";
        if (45 <= f && 89 >= f) return "an hour ago";
        if (90 <= b && 44 >= f) return f + " minutes ago";
        if (45 <= b && 89 >= b) return "a minute ago";
        if (0 <= b && 45 >= b) return "a few seconds ago";
    }
    return function (b) {
        var e = (this.$container = $(b)),
            g = e.attr("data-section-id");
        b = e.attr("data-username") || "Shopify";
        twitterFetcher.fetch({
            profile: { screenName: b },
            maxTweets: +e.attr("data-blocks-limit"),
            enableLinks: !0,
            showUser: !0,
            showTime: !0,
            dataOnly: !1,
            showImages: !1,
            showRetweet: !0,
            lang: "en",
            customCallback: function (f) {
                f &&
                    f.length &&
                    (f.forEach(function (d) {
                        $("#inline-swiper-" + g)
                            .find(".swiper-wrapper")
                            .append(d);
                    }),
                    inlineSwiper(e),
                    twttr.widgets.load());
            },
            showInteraction: !0,
            dateFunction: function (f, d) {
                return '<span class="tweet-date-title">Posted</span><span class="tweet-date">' + a(d) + "</span>";
            },
        });
    };
})();
theme.LogoSection = (function () {
    return function (a) {
        a = this.$container = $(a);
        inlineSwiper(a);
    };
})();
theme.Quotes = (function () {
    return function (a) {
        a = this.$container = $(a);
        inlineSwiper(a);
    };
})();
function hexToRGB(a, b) {
    var e = parseInt(a.slice(1, 3), 16),
        g = parseInt(a.slice(3, 5), 16);
    a = parseInt(a.slice(5, 7), 16);
    return "rgba(" + e + ", " + g + ", " + a + ", " + b + ")";
}
theme.ImageBarSection = (function () {
    return function (a) {
        a = this.$container = $(a);
        a.attr("data-section-id");
        "true" === a.attr("data-section-lighbox") &&
            a.magnificPopup({
                delegate: ".gallery-item-link",
                mainClass: "-image-gallery my-mfp-zoom-in",
                type: "image",
                gallery: { enabled: !0 },
                image: {
                    titleSrc: function (b) {
                        return '<h4 class="gallery-item_lighbox-title">' + b.el.attr("title") + '</h4><p class="gallery-item_lighbox-subtitle">' + b.el.attr("data-subtitle") + "</p>";
                    },
                },
            });
    };
})();
theme.ImageBarSection.prototype = _.assignIn({}, theme.ImageBarSection.prototype, {
    onBlockSelect: function (a) {
        var b = $(a.target).data("id"),
            e = $(a.target).data("color");
        a = $(a.target).data("opacity") / 100;
        e = hexToRGB(e, a);
        $(".gallery-text-" + b).css("background-color", e);
    },
});
theme.RichTextSection = (function () {
    return function (a) {
        var b = (this.$container = $(a));
        b.attr("data-section-id");
        a = b.find(".hero__inner").outerHeight() - 80;
        b.find(".hero").css("min-height", a);
        $(window).resize(function () {
            var e = b.find(".hero__inner").outerHeight() - 80;
            b.find(".hero").css("min-height", e);
        });
    };
})();
theme.NewsletterSection = (function () {
    return function (a) {
        var b = (this.$container = $(a));
        b.attr("data-section-id");
        a = b.find(".hero__inner").outerHeight() - 80;
        b.find(".hero").css("min-height", a);
        $(window).resize(function () {
            var e = b.find(".hero__inner").outerHeight() - 80;
            b.find(".hero").css("min-height", e);
        });
        b.find("form").on("submit", function () {
            event.preventDefault();
            $.cookie("newsletter_confirm", "newsletter", { expires: 2e3 });
            $(this).off("submit").submit();
        });
        null != $.cookie("newsletter_confirm") &&
            ("?customer_posted=true" == window.location.search || "#contact_form" == window.location.hash || b.find("form .errors").length) &&
            0 > window.location.href.indexOf("challenge") &&
            ($.cookie("newsletter_confirm", null),
            window.history.replaceState(null, null, window.location.pathname),
            $("#shopify-section-footer .errors").hide(),
            b.find("form .errors").length || b.find("form").html('<div class="alert alert-success">Thanks for subscribing to our newsletter!</div>'),
            (a = (b.find("form").closest(".shopify-section").offset().top / 1e3) * 150),
            $("html, body").animate({ scrollTop: b.find("form").closest(".shopify-section").offset().top }, a, function () {
                if (b.find("form").closest(".shopify-section").offset().top > $(window).scrollTop() && $(window).scrollTop() + $(window).height() < $(document).height()) {
                    var e = ((b.find("form").closest(".shopify-section").offset().top - $(window).scrollTop()) / 1e3) * 150;
                    $("html, body").animate({ scrollTop: b.find("form").closest(".shopify-section").offset().top }, e);
                }
            }));
    };
})();
theme.Cart = (function () {
    return function (a) {
        bindEventsInCart();
    };
})();
theme.Cart.prototype = _.assignIn({}, theme.Cart.prototype, {
    onSelect: function () {
        updatePageHeaderView();
    },
});
var handleizeStr = function (a) {
        return a
            .toLowerCase()
            .replace(/[^\w\u00C0-\u024f]+/g, "-")
            .replace(/^-+|-+$/g, "");
    },
    changeUrl = !1,
    index_featured_product_image = !1;
theme.ProductPage = (function () {
    function a(d, c) {
        d.replaceWith(c.clone());
        c.replaceWith(d);
    }
    function b(d) {
        d = this.$container = $(d);
        var c = d.attr("data-section-id");
        this.settings = $.extend({}, e, {
            sectionId: c,
            swiperObjects: {},
            selectors: {
                originalSelectorId: "ProductSelect-" + c,
                addToCart: "#AddToCart-" + c,
                productPrice: "#ProductPrice-" + c + " span",
                comparePrice: "#ComparePrice-" + c + " span",
                addToCartText: "#AddToCartText-" + c,
                productFeaturedImage: "#FeaturedImage-" + c,
                productImageWrap: "#FeaturedImageZoom-" + c,
                productThumbImages: ".product-single__thumbnail--" + c,
                productThumbs: ".product-single__thumbnails-" + c,
                saleLabel: ".product-price__sale-label-" + c,
                saleClasses: "product-price__sale product-price__sale--single",
                price: ".product-price__price-" + c,
                PP_zoomEnabled: ".zoom-link",
                variantSkuRow: ".sku-table-row-" + c,
                variantSku: ".variant-sku-" + c,
                variantInventoryRow: ".inventory-product-row-" + c,
                variantInventory: ".variant-inventory-" + c,
            },
        });
        d.find('form[action*="/cart/add"]').submit(function (k) {});
        d.find(".prodyct-rte-description iframe").length && d.find(".prodyct-rte-description iframe").wrap("<div class='videoWrapperRTE'></div>");
        initQuantityEvents(c);
        $("#ProductJson-" + c).html()
            ? ((this.productSingleObject = JSON.parse(document.getElementById("ProductJson-" + c).innerHTML)), this.init(), $.fn.matchHeight._update())
            : 767 < $(window).width() && $(".equal-columns-" + c).matchHeight();
    }
    var e = {
            mediaQuerySmall: "screen and (max-width: 749px)",
            mediaQueryMediumUp: "screen and (min-width: 750px)",
            bpSmall: !1,
            sliderActive: !1,
            zoomEnabled: !1,
            imageSize: null,
            imageZoomSize: null,
            selectors: {
                addToCart: "#AddToCart",
                addToCartText: "#AddToCartText",
                productFeaturedImage: "#FeaturedImage",
                productThumbImages: ".swiper-slide",
                productThumbs: ".product-item-img",
                optionSelector: "ProductSelect",
                saleLabel: ".product-price__sale-label",
                saleClasses: "product-price__sale product-price__sale--single",
            },
        },
        g = $(".desktop_caption_header").find("h1.product-item-caption-title"),
        f = $(".mobile_caption_header").find("p.product-item-caption-title");
    768 > $(window).width() && a(f, g);
    $(window).resize(function () {
        if (768 > $(window).width()) {
            var d = $(".desktop_caption_header").find("h1.product-item-caption-title"),
                c = $(".mobile_caption_header").find("p.product-item-caption-title");
            a(c, d);
        } else (d = $(".desktop_caption_header").find("p.product-item-caption-title")), (c = $(".mobile_caption_header").find("h1.product-item-caption-title")), a(d, c);
    });
    $("#shopify-product-reviews").on("click", ".spr-summary-actions-newreview", function () {
        $.fn.matchHeight._update();
    });
    b.prototype = _.assignIn({}, b.prototype, {
        onSelect: function () {
            "true" == this.reviewsStars &&
                SPR.$(document).ready(function () {
                    return SPR.registerCallbacks(), SPR.initRatingHandler(), SPR.initDomEls(), SPR.loadProducts(), SPR.loadBadges();
                });
            1 == theme.ProductVideo.youtubeApiLoaded && theme.ProductVideo.loadVideos(theme.ProductVideo.hosts.youtube);
        },
        onUnload: function (d) {
            theme.ProductVideo.removeSectionVideos(this.settings.sectionId);
            theme.ProductModel.removeSectionModels(this.settings.sectionId);
        },
        init: function () {
            this.initSwiper();
            this.stringOverrides();
            this.initProductVariant();
            this.initImageZoom();
            this.initSelectDropdowns();
            this.initSwatches();
            this.initStickSlider();
            this.initTabs();
        },
        initTabs: function () {
            var d = this.settings.sectionId,
                c = $(".main-product-description-" + d),
                k = c.html();
            if ("undefined" != typeof k) {
                var n = k.match(/<!\-\- TABS \-\->((.|[\r\n])+)<!\-\- \/TABS \-\->/m);
                null !== n &&
                    1 < n.length &&
                    ($(".product-description-tabs-" + d).html('<ul class="resp-tabs-list pr-tab-' + d + '"></ul><div class="resp-tabs-container pr-tab-' + d + '"></div>'),
                    c.html(k.replace(/<!\-\- TABS \-\->((.|[\r\n])+)<!\-\- \/TABS \-\->/m, "")),
                    (c = n[1].split("<h5>")),
                    $.each(c, function (h, q) {
                        0 != h &&
                            ((info = q.split("</h5>")), $(".resp-tabs-list.pr-tab-" + d).append('<li id="' + handleizeStr(info[0]) + '">' + info[0] + "</li>"), $(".resp-tabs-container.pr-tab-" + d).append("<div>" + info[1] + "</div>"));
                    }),
                    $(".product-description-tabs-" + d).easyResponsiveTabs({
                        type: "default",
                        width: "auto",
                        fit: !0,
                        tabidentify: "pr-tab-" + d,
                        activate: function () {
                            $.fn.matchHeight._maintainScroll = !0;
                            $.fn.matchHeight._update();
                        },
                    }),
                    "" !== window.location.hash &&
                        ((c = "#" + window.location.hash.split("#tab=")[1]),
                        $(".product-description-tabs-" + d)
                            .find(c)
                            .click()));
            }
        },
        initStickSlider: function () {
            var d = this.settings.sectionId;
            if (767 < $(window).width()) {
                var c = $(".product-description-" + d).outerHeight();
                $(".product-gallery-" + d).outerHeight() > c ? $(".equal-columns-" + d).matchHeight() : ($("#ProductSection-" + d + " #parent > div").matchHeight(), $(".slider-" + d).stick_in_parent({ parent: "#parent" }));
            }
            $(window).resize(function () {
                if (767 < $(window).width()) {
                    var k = $(".product-description-" + d).outerHeight();
                    $(".product-gallery-" + d).outerHeight() > k ? $(".equal-columns-" + d).matchHeight() : "undefined" == typeof $._data($(".slider-" + d)[0]).events && $(".slider-" + d).stick_in_parent({ parent: "#parent" });
                } else $(".slider-" + d).trigger("sticky_kit:detach");
            });
        },
        stringOverrides: function () {
            theme.productStrings = theme.productStrings || {};
            $.extend(theme.strings, theme.productStrings);
        },
        initImageZoom: function () {
            if ("function" === typeof $.zoom && this.settings.selectors.PP_zoomEnabled.length) {
                if (767 < $(window).width()) {
                    var d = $("#slider");
                    d.length &&
                        ((d = d.find(".zoom-img-wrap")),
                        d.length &&
                            d.each(function () {
                                var c = $(this),
                                    k = c.find("img.zoom-img").data("srczoom");
                                c.find(".zoom-img-container").zoom({ url: k, touch: !1 });
                            }));
                }
                $(window).resize(function () {
                    if (767 < $(window).width()) {
                        var c = $("#slider");
                        c.length &&
                            ((c = c.find(".zoom-img-wrap")),
                            c.length &&
                                c.each(function () {
                                    var k = $(this),
                                        n = k.find("img.zoom-img").data("srczoom");
                                    k.find(".zoom-img-container").zoom({ url: n, touch: !1 });
                                }));
                    } else
                        (c = $("#slider")),
                            c.length &&
                                ((c = c.find(".zoom-img-wrap")),
                                c.length &&
                                    c.each(function () {
                                        $(this).find(".zoom-img-container").trigger("zoom.destroy");
                                    }));
                });
            } else return !1;
        },
        initSwatches: function () {
            this.$container.find(".swatch :radio").change(function () {
                var y = jQuery(this).closest(".swatch").attr("data-option-index"),
                    x = jQuery(this)
                        .val()
                        .replace(/\s{2,}/g, " ");
                jQuery(this).closest("form").find(".single-option-selector").eq(y).val(x).trigger("change");
            });
            for (var d = this.productSingleObject, c = 0, k = d.variants.length; c < k; c++) {
                var n = d.variants[c];
                if (n.available)
                    for (var h = 0, q = n.options.length; h < q; h++) {
                        var r = n.options[h];
                        r = handleizeStr(r);
                        this.$container
                            .find('.swatch[data-option-index="' + h + '"] .' + r)
                            .removeClass("soldout")
                            .addClass("available")
                            .find(":radio")
                            .removeAttr("disabled");
                    }
            }
        },
        initSelectDropdowns: function () {
            var d = this.$container;
            setTimeout(function () {
                d.find(".single-option-selector").select2({ theme: "classic", minimumResultsForSearch: Infinity });
            }, 100);
        },
        initSwiper: function () {
            var d = function () {
                    $(window).trigger("resize");
                },
                c = this.$container,
                k = this.settings.sectionId;
            c.find("[data-product-media-type-video]").each(function () {
                var h = $(this);
                theme.ProductVideo.init(h, k);
            });
            var n = $("[data-product-media-type-model]", c);
            0 < n.length && theme.ProductModel.init(n, k);
            $(document).on("shopify_xr_launch", function () {
                c.find(".main-swiper-container .swiper-slide-active").trigger("xrLaunch");
            });
            $(".swiper-main-" + this.settings.sectionId + " .swiper-wrapper .swiper-slide");
            this.settings.swiperObjects.mySwiper = new Swiper(".swiper-main-" + this.settings.sectionId, {
                direction: "horizontal",
                pagination: { el: ".swiper-pagination-" + this.settings.sectionId, clickable: !0 },
                updateOnImagesReady: !0,
                spaceBetween: 0,
                slidesPerView: 1,
                roundLengths: !0,
                simulateTouch: !1,
                onImagesReady: d,
                on: {
                    transitionEnd: function () {
                        var h = this.activeIndex,
                            q = $(this.$el).find(".swiper-slide").eq(h).find("[data-product-single-media-wrapper]");
                        $(".main-swiper-container").find("[data-product-single-media-wrapper]").trigger("mediaHidden").removeAttr("style");
                        q.css("visibility", "visible").trigger("mediaVisible");
                        if (theme.Helpers.isTouch()) return !1;
                        q.find("model-viewer").length
                            ? q.find("model-viewer").focus()
                            : q.find("[tabindex='0']").length
                            ? q.find("[tabindex]").focus()
                            : setTimeout(function () {
                                  q.focus();
                              }, 100);
                    },
                },
            });
            this.settings.swiperObjects.gallerySwiperThumbsVert = new Swiper("#swiper-gallery-thumbs-vert-" + this.settings.sectionId, {
                direction: "vertical",
                spaceBetween: 0,
                centeredSlides: !0,
                slidesPerView: "auto",
                slideToClickedSlide: !0,
                updateOnImagesReady: !0,
                onImagesReady: d,
                disableAutoResize: !0,
                resizeEvent: "auto",
            });
            this.settings.swiperObjects.gallerySwiperThumbs = new Swiper("#swiper-gallery-thumbs-" + this.settings.sectionId, {
                spaceBetween: 0,
                slidesPerView: "auto",
                centeredSlides: !0,
                slideToClickedSlide: !0,
                updateOnImagesReady: !0,
                onImagesReady: d,
                disableAutoResize: !0,
                resizeEvent: "auto",
            });
            this.settings.swiperObjects.gallerySwiperVert = new Swiper("#swiper-gallery-vert-" + this.settings.sectionId, {
                spaceBetween: 0,
                slidesPerView: 1,
                roundLengths: !0,
                simulateTouch: !1,
                on: {
                    transitionStart: function () {
                        $("#swiper-gallery-thumbs-vert-" + k).css("pointer-events", "none");
                    },
                    transitionEnd: function () {
                        $("#swiper-gallery-thumbs-vert-" + k).css("pointer-events", "all");
                        var h = this.activeIndex;
                        h = $(this.$el).find(".swiper-slide").eq(h).find("[data-product-single-media-wrapper]");
                        $(".main-swiper-container").find("[data-product-single-media-wrapper]").trigger("mediaHidden").removeAttr("style");
                        h.css("visibility", "visible").trigger("mediaVisible");
                        if (theme.Helpers.isTouch()) return !1;
                        h.find("model-viewer").length ? h.find("model-viewer").focus() : h.find("[tabindex='0']").length ? h.find("[tabindex]").focus() : h.focus();
                    },
                },
            });
            this.settings.swiperObjects.gallerySwiper = new Swiper("#swiper-gallery-" + this.settings.sectionId, {
                spaceBetween: 0,
                slidesPerView: 1,
                roundLengths: !0,
                simulateTouch: !1,
                on: {
                    transitionStart: function () {
                        $("#swiper-gallery-thumbs-" + k).css("pointer-events", "none");
                    },
                    transitionEnd: function () {
                        $("#swiper-gallery-thumbs-" + k).css("pointer-events", "all");
                        var h = this.activeIndex,
                            q = $(this.$el).find(".swiper-slide").eq(h).find("[data-product-single-media-wrapper]");
                        $(".main-swiper-container").find("[data-product-single-media-wrapper]").trigger("mediaHidden").removeAttr("style");
                        q.css("visibility", "visible").trigger("mediaVisible");
                        if (theme.Helpers.isTouch()) return !1;
                        q.find("model-viewer").length
                            ? q.find("model-viewer").focus()
                            : q.find("[tabindex='0']").length
                            ? q.find("[tabindex]").focus()
                            : setTimeout(function () {
                                  q.focus();
                              }, 100);
                    },
                },
            });
            "undefined" != typeof this.settings.swiperObjects.gallerySwiper.controller &&
                ((this.settings.swiperObjects.gallerySwiper.controller.control = this.settings.swiperObjects.gallerySwiperThumbs),
                (this.settings.swiperObjects.gallerySwiperThumbs.controller.control = this.settings.swiperObjects.gallerySwiper));
            "undefined" != typeof this.settings.swiperObjects.gallerySwiperVert.controller &&
                ((this.settings.swiperObjects.gallerySwiperVert.controller.control = this.settings.swiperObjects.gallerySwiperThumbsVert),
                (this.settings.swiperObjects.gallerySwiperThumbsVert.controller.control = this.settings.swiperObjects.gallerySwiperVert));
            c.on("keyup", ".swiper-thumbnails-main-container .swiper-slide", function (h) {
                if (13 === h.keyCode && ((h = c.find(".main-swiper-container")[0].swiper), "object" == typeof h && $(this).is(":focus"))) {
                    var q = h.activeIndex,
                        r = $(document.activeElement).index(),
                        y = c.find(".swiper-slide-active").index();
                    r == y
                        ? ((h = $(h.$el).find(".swiper-slide").eq(q).find("[data-product-single-media-wrapper]")),
                          h.trigger("mediaVisible"),
                          h.find("model-viewer").length ? h.find("model-viewer").focus() : h.find("[tabindex='0']").length ? h.find("[tabindex='0']").focus() : h.focus())
                        : h.slideTo(r);
                }
            });
            c.on("keyup", ".swiper-pagination-bullet", function (h) {
                if (13 === h.keyCode) {
                    var q = c.find(".main-swiper-container")[0].swiper;
                    if ("object" == typeof q) {
                        var r = q.activeIndex;
                        h = $(document.activeElement).index();
                        var y = c.find(".swiper-slide-active").index();
                        h == y &&
                            setTimeout(function () {
                                var x = $(q.$el).find(".swiper-slide").eq(r).find("[data-product-single-media-wrapper]");
                                x.trigger("mediaVisible");
                                x.find("model-viewer").length ? x.find("model-viewer").focus() : x.find("[tabindex='0']").length ? x.find("[tabindex='0']").focus() : x.focus();
                            }, 300);
                    }
                }
            });
            c.on("click", ".swiper-thumbnails-main-container .swiper-slide-active, .swiper-pagination-bullet", function (h) {
                if (theme.Helpers.isTouch()) return !1;
                var q = c.find(".main-swiper-container")[0].swiper;
                if ("object" == typeof q) {
                    var r = q.activeIndex;
                    h = $(this).index();
                    var y = c.find(".swiper-slide-active").index();
                    h != y ||
                        q.animating ||
                        setTimeout(function () {
                            var x = $(q.$el).find(".swiper-slide").eq(r).find("[data-product-single-media-wrapper]");
                            x.trigger("mediaVisible");
                            x.find("model-viewer").length ? x.find("model-viewer").focus() : x.find("[tabindex='0']").length ? x.find("[tabindex='0']").focus() : x.focus();
                        }, 300);
                }
            });
        },
        initProductVariant: function () {
            if (this.productSingleObject) {
                var d = this,
                    c = this.productSingleObject,
                    k = c.variants;
                $(".main-product-select-" + c.id + " .single-option-selector").on("change", function () {
                    for (
                        var q = $(".main-product-select-" + c.id + " #SingleOptionSelector-0").val() || null,
                            r = $(".main-product-select-" + c.id + " #SingleOptionSelector-1").val() || null,
                            y = $(".main-product-select-" + c.id + " #SingleOptionSelector-2").val() || null,
                            x = !0,
                            F = 0,
                            L = k.length;
                        F < L;
                        F++
                    ) {
                        var z = k[F];
                        null != z.option1 && (z.option1 = z.option1.replace(/\s{2,}/g, " "));
                        null != z.option2 && (z.option2 = z.option2.replace(/\s{2,}/g, " "));
                        null != z.option3 && (z.option3 = z.option3.replace(/\s{2,}/g, " "));
                        if (q == z.option1 && r == z.option2 && y == z.option3) {
                            x = !1;
                            $("#ProductSelect-" + c.id).val(z.id);
                            d.productVariantCallback(z, c.id);
                            break;
                        }
                    }
                    x && d.productVariantCallback(null, c.id);
                });
                var n = $("#ProductSelect-" + c.id + " option[selected]").length,
                    h = $("#ProductSelect-" + c.id).length;
                (n && 1 != h) || d.productVariantCallback(c.variants[0], c.id);
                1 == c.options.size && "Title" != c.options[0] && $(".selector-wrapper:eq(0)").prepend("<label>" + c.options[0] + "</label>");
                1 == c.variants.size && c.variants[0].title.indexOf("Default") + 1 && $(".selector-wrapper").hide();
                if (window.location.href.indexOf("?variant=") + 1)
                    $("#ProductTemplate-" + c.id).html() && (changeUrl = !0),
                        $("#FeaturedProductTemplate").html() && (index_featured_product_image = !0),
                        $(".main-product-select-" + c.id + " .single-option-selector")
                            .first()
                            .trigger("change");
                else
                    for (variant in ((n = !1), c.variants))
                        if (c.variants[variant].available && 0 == n) {
                            n = !0;
                            for (option in c.options)
                                (h = Object.keys(c.options).indexOf(option)),
                                    0 <= h &&
                                        $(".main-product-select-" + c.id + " .single-option-selector:eq(" + h + ")")
                                            .val(c.variants[variant].options[h].replace(/\s{2,}/g, " "))
                                            .trigger("change");
                            $("#ProductTemplate-" + c.id).html() && (changeUrl = !0);
                            $("#FeaturedProductTemplate").html() && (index_featured_product_image = !0);
                        }
                this.productVariantStyles();
            }
        },
        productVariantStyles: function () {
            $(".selector-wrapper").addClass("product-form__item");
            $(".single-option-selector").addClass("product-form__input");
        },
        productVariantCallback: function (d, c) {
            if (d && changeUrl) {
                var k = window.location.protocol + "//" + window.location.host + window.location.pathname + "?variant=" + d.id;
                window.history.replaceState({ path: k }, "", k);
            }
            var n = $(this.settings.selectors.addToCart).closest("form").find(".shopify-payment-button");
            if (d) {
                var h = [];
                $(".main-product-select-" + c + " .single-option-selector option:selected").each(function () {
                    h.push($(this).index());
                });
                var q = jQuery("#ProductSelect-" + c).closest("form");
                k = 0;
                for (var r = d.options.length; k < r; k++) {
                    var y = h[k];
                    y = q.find('.swatch[data-option-index="' + k + '"] div.swatch-element')[y];
                    y = $(y).find(":radio");
                    y.size() && (y.get(0).checked = !0);
                }
            }
            if (d) {
                d.featured_image &&
                    (changeUrl || index_featured_product_image) &&
                    ((k = d.featured_media.id),
                    "undefined" != typeof this.settings.swiperObjects.gallerySwiper.controller
                        ? this.settings.swiperObjects.gallerySwiper.slideTo($("#" + k).index())
                        : "undefined" != typeof this.settings.swiperObjects.gallerySwiperVert.controller
                        ? this.settings.swiperObjects.gallerySwiperVert.slideTo($("#" + k).index())
                        : this.settings.swiperObjects.mySwiper.slideTo($("#" + k).index()));
                $(this.settings.selectors.productPrice).html(Shopify.formatMoney(d.price, theme.moneyFormat));
                d.compare_at_price > d.price
                    ? ($(this.settings.selectors.comparePrice).html(Shopify.formatMoney(d.compare_at_price, theme.moneyFormat)).removeClass("hide"),
                      $(this.settings.selectors.price).addClass(this.settings.selectors.saleClasses),
                      $(this.settings.selectors.saleLabel).removeClass("hide"),
                      $(this.settings.selectors.comparePrice).closest("li").removeClass("hide"))
                    : ($(this.settings.selectors.comparePrice).addClass("hide"),
                      $(this.settings.selectors.comparePrice).closest("li").addClass("hide"),
                      $(this.settings.selectors.saleLabel).addClass("hide"),
                      $(this.settings.selectors.price).removeClass(this.settings.selectors.saleClasses));
                d.available
                    ? ($(this.settings.selectors.addToCart).prop("disabled", !1), $(this.settings.selectors.addToCartText).text(theme.strings.addToCart), n.show())
                    : ($(this.settings.selectors.addToCart).prop("disabled", !0), $(this.settings.selectors.addToCartText).text(theme.strings.soldOut), n.hide());
                if ("null" === jQuery.type(d)) console.log("woring");
                else if (
                    ((variantSkuRow = $(this.settings.selectors.variantSkuRow)),
                    (variantSku = $(this.settings.selectors.variantSku)),
                    (variantInventoryRow = $(this.settings.selectors.variantInventoryRow)),
                    (variantInventory = $(this.settings.selectors.variantInventory)),
                    d.sku && variantSkuRow
                        ? (variantSkuRow.css("display", "block"), variantSku.html(d.sku), variantSkuRow.is(":last-child") && variantSkuRow.prev("li").removeAttr("style"))
                        : (variantSkuRow.css("display", "none"), variantSku.html(""), variantSkuRow.is(":last-child") && variantSkuRow.prev("li").css("padding-bottom", "0")),
                    variantInventoryRow)
                ) {
                    variantInventoryRow.css("display", "block");
                    c = $("#ProductSelect-" + c);
                    n = c.find("option").length;
                    for (k = 0; k <= n; k++) {
                        var x = c.find("option:nth-child(" + k + ")");
                        if (x.val() == d.id) {
                            var F = x.attr("data-inventory_management"),
                                L = x.attr("data-inventory_policy");
                            x = x.attr("data-inventory_quantity");
                            break;
                        } else x = L = F = "";
                    }
                    "shopify" == F && "continue" != L
                        ? 0 < x
                            ? variantInventory.html("<span class=in-stock>In stock! Usually ships within 24 hours.</span>")
                            : variantInventory.html("<span class=out-of-stock>Sorry!  This product is currently out of stock.</span>")
                        : variantInventory.html("<span class=in-stock>In stock! Usually ships within 24 hours.</span>");
                }
                0 == d.price
                    ? ((d = this.$container.attr("data-hide_price")),
                      (F = this.$container.attr("data-show_btn")),
                      "" != d
                          ? (this.$container.find(".product-item-caption-price").hide(), this.$container.find(".price0_text").show())
                          : (this.$container.find(".product-item-caption-price").show(), this.$container.find(".price0_text").hide()),
                      "true" == F
                          ? ($(this.settings.selectors.addToCart).hide().prop("disabled", !0), this.$container.find(".product_payments_btns").hide())
                          : ($(this.settings.selectors.addToCart).show().prop("disabled", !1), this.$container.find(".product_payments_btns").show()))
                    : (this.$container.find(".product-item-caption-price").show(),
                      this.$container.find(".price0_text").hide(),
                      $(this.settings.selectors.addToCart).show(),
                      this.$container.find(".product_payments_btns").show(),
                      d.available && $(this.settings.selectors.addToCart).prop("disabled", !1));
            } else
                this.$container.find(".product-item-caption-price").show(),
                    this.$container.find(".price0_text").hide(),
                    this.$container.find(".product_payments_btns").show(),
                    $(this.settings.selectors.addToCart).prop("disabled", !0),
                    $(this.settings.selectors.addToCartText).text(theme.strings.unavailable),
                    $(this.settings.selectors.comparePrice).addClass("hide"),
                    $(this.settings.selectors.comparePrice).closest("li").addClass("hide"),
                    $(this.settings.selectors.saleLabel).addClass("hide"),
                    $(this.settings.selectors.price).removeClass(this.settings.selectors.saleClasses),
                    $(this.settings.selectors.productPrice).html("Unavailable"),
                    n.hide(),
                    variantInventoryRow && variantInventory.html("<span class=out-of-stock>Sorry!  This product is currently out of stock.</span>");
        },
    });
    return b;
})();
var swiperArr = [],
    container = $("#container");
theme.CollectionPage = (function () {
    return function (a) {
        var b = (this.$container = $(a)),
            e = (this.sectionId = b.attr("data-section-id"));
        a = $("#container");
        b.find(".product-thumb-caption-title").on("click", function () {
            var k = $(this).closest(".product-thumb").find(".product-thumb-href").attr("href");
            window.location.href = k;
        });
        initPushyMenu();
        $(window).scroll(function () {
            if ($(window).scrollTop() + $(window).height() > $("#shopify-section-collection-template").height() + 50)
                $("#pushy-filters-btn").css({ position: "absolute", bottom: "auto", marginTop: $("#shopify-section-collection-template").height() - 140, left: 0 });
            else {
                if (!$(".nav-main").length) var k = 0;
                $("#pushy-filters-btn").css({ position: "fixed", marginTop: 0, bottom: 0, left: k });
            }
        });
        800 < $(window).width() &&
            $(".showInfoOnHover .animationOnHoverBlock").each(function () {
                var k = $(this).outerHeight(),
                    n = $(this).find("h5").outerHeight() - 32;
                k = k - n - 20;
                $(this).css("transform", "translateY(" + k + "px)");
            });
        $(window).resize(function () {
            if (800 < $(window).width()) {
                var k = $(".showInfoOnHover .animationOnHoverBlock");
                k.each(function () {
                    var n = $(this).outerHeight(),
                        h = $(this).find("h5").outerHeight() - 32;
                    n = n - h - 20;
                    $(this).css("transform", "translateY(" + n + "px)");
                });
            } else
                (k = $(".showInfoOnHover .animationOnHoverBlock")),
                    k.each(function () {
                        $(this).removeAttr("style");
                    });
        });
        $(".same-height-blocks").matchHeight();
        992 < $(window).width() && $("#category-sticky-filters").stick_in_parent({ parent: "#category-sticky-parent" });
        Shopify.queryParams = {};
        if (location.search.length) for (var g = 0, f = location.search.substr(1).split("&"); g < f.length; g++) (a = f[g].split("=")), 1 < a.length && (Shopify.queryParams[decodeURIComponent(a[0])] = decodeURIComponent(a[1]));
        $("#sortBy")
            .val($("#sortBy").data("sort"))
            .bind("change", function () {
                Shopify.queryParams.sort_by = jQuery(this).val();
                location.search = jQuery.param(Shopify.queryParams);
            });
        setTimeout(function () {
            b.find("#sortBy").select2({ theme: "classic", minimumResultsForSearch: Infinity });
        }, 100);
        initQuickView(e);
        window.onpopstate = function (k) {};
        e = $(".advanced-filter");
        var d, c;
        $(".advanced-filter a").on("click", function (k) {
            k.preventDefault();
        });
        e.on("click", function (k) {
            var n = $(this),
                h = n.data("group"),
                q = n.find("a").attr("href");
            if (n.hasClass("active-filter")) return (window.location = q);
            (d = $('.active-filter[data-group="' + h + '"]')) && d.data("group") === h && (k.preventDefault(), (c = d.data("handle") + "+"), (q = q.replace(c, "")));
            window.location = q;
        });
        (function n() {
            setTimeout(function () {
                $(".collection-products-wrapper:last-child .product-thumb-img").hasClass("lazyloaded") ? (($.fn.matchHeight._maintainScroll = !0), $.fn.matchHeight._update()) : n();
            }, 100);
        })();
        enabledQuickView();
    };
})();
theme.CollectionPage.prototype = _.assignIn({}, theme.CollectionPage.prototype, {
    onSelect: function () {
        var a = $.magnificPopup.instance;
        "undefined" !== typeof a && a.close();
        updatePageHeaderView();
    },
});
function quickViewSelectCallback(a, b) {
    var e = $('div.quick-view-panel[data-id="' + b + '"]');
    if (0 === e.length) console.log("Can not find product panel");
    else {
        if (a && a.featured_image) {
            var g = $("#" + a.featured_media.id).index();
            swiperCarousel.slideTo(g);
        }
        if (a) {
            var f = [];
            $("[data-id='" + b + "'] .single-option-selector option:selected").each(function () {
                f.push($(this).index());
            });
            b = jQuery("#VQProductSelect-" + b).closest("form");
            g = 0;
            for (var d = a.options.length; g < d; g++) {
                var c = f[g];
                c = b.find('.swatch[data-option-index="' + g + '"] div.swatch-element')[c];
                c = $(c).find(":radio");
                c.size() && (c.get(0).checked = !0);
            }
        }
        b = e.find(".AddToCartQV");
        g = b.find("span");
        d = e.find(".product-item-caption-price-current span");
        c = e.find(".product-item-caption-price-list span");
        var k = e.find(".shopify-payment-button");
        if (a) {
            a.available ? (b.removeClass("disabled").prop("disabled", !1).val("Add to cart"), g.text("Add to cart"), k.show()) : (b.val("Sold out").addClass("disabled").prop("disabled", !0), g.html("Sold out"), k.hide());
            d.length && d.html(Shopify.formatMoney(a.price, theme.moneyFormat));
            if (c.length)
                if (a.compare_at_price > a.price) c.html(Shopify.formatMoney(a.compare_at_price, theme.moneyFormat)).show(), c.closest("li").show();
                else {
                    debugger;
                    c.html("");
                    c.closest("li").hide();
                    c.hide();
                }
            0 == a.price
                ? ((a = e.attr("data-hide_price")),
                  (g = e.attr("data-show_btn")),
                  "" != a ? (e.find(".product-item-caption-price").hide(), e.find(".price0_text").show()) : (e.find(".product-item-caption-price").show(), e.find(".price0_text").hide()),
                  "true" == g ? (b.hide().prop("disabled", !0), e.find(".product_payments_btns").hide()) : (b.show().prop("disabled", !1), e.find(".product_payments_btns").show()))
                : (e.find(".product-item-caption-price").show(), e.find(".price0_text").hide(), b.show(), e.find(".product_payments_btns").show(), a.available && b.prop("disabled", !1));
        } else
            b.val("Unavailable").show().addClass("disabled").prop("disabled", !0),
                g.html("Sold out"),
                c.html(""),
                c.closest("li").hide(),
                c.hide(),
                k.hide(),
                d.html("Unavailable"),
                e.find(".product-item-caption-price").show(),
                e.find(".price0_text").hide(),
                e.find(".product_payments_btns").show();
    }
}
theme.HeaderSection = (function () {
    return function (a) {
        function b(z, w) {
            var C = n.scrollTop();
            if (C > h) {
                if (992 >= $(window).width() || !e.data("index-overlap")) var K = !1;
                else $("body").hasClass("template-index") && $("#container").find(".shopify-section").first().hasClass("home-slideshow-section") ? (K = !0) : $("#page-header").length && (K = !0);
                z.addClass("nav-sticky");
                K || $("#container").css({ marginTop: w });
            }
            C < h && (z.removeClass("nav-sticky"), $("#container").css({ marginTop: 0 }));
        }
        var e = (this.$container = $(a));
        this.sectionId = e.attr("data-section-id");
        a = e.data("menu-type");
        e.data("hero-size");
        e.data("show-breadcrumbs") ? $("body").addClass("show_breadcrumbs") : $("body").removeClass("show_breadcrumbs");
        updatePageHeaderView();
        $(".header-nav-pushy a, .header-nav-pushy button").each(function (z, w) {
            $(w).attr("tabindex", -1);
        });
        0 < $(".left_nav_icons_accordion").length &&
            $(".left_nav_icons_accordion a, .left_nav_icons_accordion select").each(function (z, w) {
                $(w).attr("tabindex", -1);
            });
        $(".close-pushy-menu").on("focus", function () {
            $(".pushy-menu-btn:eq(0)").trigger("click");
        });
        $(".pushy-menu-btn").keypress(function (z) {});
        $('[data-toggle="collapse"]').keypress(function (z) {
            32 == z.keyCode && $(this).trigger("click");
        });
        $(".second_level_drop_link").on("click", function (z) {
            var w = $(this),
                C = w.hasClass("collapsed"),
                K = w.data("link-url");
            z.target != this || C
                ? (w.addClass("second_level_drop_link_active"),
                  setTimeout(function () {
                      $(".second_level_drop_link")
                          .not(".second_level_drop_link_active")
                          .each(function () {
                              $(this)
                                  .addClass("collapsed")
                                  .attr("aria-expanded", "false")
                                  .closest(".panel-heading")
                                  .next(".panel-collapse")
                                  .attr("aria-expanded", !1)
                                  .animate({ height: "0px" }, 400, function () {
                                      $(this).removeClass("in");
                                  });
                          });
                      w.removeClass("second_level_drop_link_active");
                  }, 100))
                : (window.location.href = K);
        });
        $(".third_level_drop_link").on("click", function (z) {
            var w = $(this),
                C = w.hasClass("collapsed");
            w = w.data("link-url");
            z.target != this || C || (window.location.href = w);
        });
        $(".header-nav-pushy [aria-expanded]").on("focusin", function () {
            $(this).attr("aria-expanded", !0);
        });
        $(".header-nav-pushy [aria-expanded]").on("focusout", function () {
            $(this).attr("aria-expanded", !1);
        });
        $('.mega-menu-simple [aria-haspopup="true"]').on("focusin", function () {
            if (theme.Helpers.isTouch()) return !1;
            $(this).addClass("dropdown_open");
        });
        $('.mega-menu-simple [aria-haspopup="true"]').on("focusout", function (z) {
            if (theme.Helpers.isTouch()) return !1;
            $(z.relatedTarget).closest($(this)).length || $(this).removeClass("dropdown_open");
        });
        $('.mega-yamm-menu  [aria-haspopup="true"]').on("focusin", function () {
            if (theme.Helpers.isTouch()) return !1;
            $(this).addClass("dropdown_open");
        });
        $('.mega-yamm-menu [aria-haspopup="true"]').on("focusout", function (z) {
            if (theme.Helpers.isTouch()) return !1;
            $(z.relatedTarget).closest($(this)).length || $(this).removeClass("dropdown_open");
        });
        if ($("body").hasClass("template-index")) {
            var g = $("#container").find(".shopify-section").first().hasClass("overlapped_content"),
                f = $("#top-header-section").data("index-overlap"),
                d = $("#top-header-section").data("bg-color"),
                c = $("#top-header-section").data("logo-width") + "px",
                k = $("#top-header-section").data("notificationbar");
            g && f
                ? ($(".nav-standard-float, .nav-container, .nav-main-logo").css({ position: "absolute", background: "none" }),
                  $(".nav-main-logo img").css("width", c),
                  $("#shopify-section-header").addClass("white_icons_header"),
                  1 == k &&
                      ((g = $(".notification-bar").outerHeight()),
                      (f = $("#container").find(".shopify-section>*").first().data("height")),
                      $("#container")
                          .find(".shopify-section")
                          .first()
                          .find(".hero--full_screen, .hero-background-wrapper, .hero-item")
                          .css("height", "calc(" + f + " - " + g + "px"),
                      $(window).resize(function () {
                          var z = $("#top-header-section").outerHeight(),
                              w = $("#container").find(".shopify-section>*").first().data("height");
                          $("#container")
                              .find(".shopify-section")
                              .first()
                              .find(".hero--full_screen, .hero-background-wrapper, .hero-item")
                              .css("height", "calc(" + w + " - " + z + "px");
                      })))
                : g && !f
                ? ((g = $("#top-header-section").outerHeight()),
                  (f = $("#container").find(".shopify-section>*").first().data("height")),
                  "100vh" == f
                      ? $("#container")
                            .find(".shopify-section")
                            .first()
                            .find(".hero--full_screen, .hero-background-wrapper, .hero-item, .swiper-slide")
                            .css("height", "calc(" + f + " - " + g + "px")
                      : $("#container").find(".shopify-section").first().find(".hero--full_screen, .hero-background-wrapper, .hero-item, .swiper-slide").css("height", f),
                  $(window).resize(function () {
                      var z = $("#top-header-section").outerHeight(),
                          w = $("#container").find(".shopify-section>*").first().data("height");
                      "100vh" == w
                          ? $("#container")
                                .find(".shopify-section")
                                .first()
                                .find(".hero--full_screen, .hero-background-wrapper, .hero-item, .swiper-slide")
                                .css("height", "calc(" + w + " - " + z + "px")
                          : $("#container").find(".shopify-section").first().find(".hero--full_screen, .hero-background-wrapper, .hero-item, .swiper-slide").css("height", w);
                  }))
                : $(".nav-main-logo, .nav-container, .nav-standard-float").css({ position: "relative", background: d, width: "100%" }).addClass("nav-standard-dark");
        }
        "left" != a && $(".main-content").css("margin-left", "0");
        var n = $(window),
            h = 0.5 * n.height(),
            q = $("#navbarStickyDesktop"),
            r = q.height(),
            y = $("#navbarStickyMobile"),
            x = y.height(),
            F = $("#navbarStickyTablet"),
            L = F.height();
        a = function () {
            return b(q, r);
        };
        g = function () {
            return b(y, x);
        };
        f = function () {
            return b(F, L);
        };
        if (q.length && 991 < $(window).width()) n.on("scroll", a);
        else if (F.length && 991 >= $(window).width() && 576 < $(window).width()) n.on("scroll", f);
        else if (y.length && 575 >= $(window).width()) n.on("scroll", g);
        if (window.innerWidth < 768) {
        $(".dropdown.yamm-fw").hoverIntent(
            function () {
                $(this).attr("aria-expanded", !0);
            },
            function () {
                $(this).attr("aria-expanded", !1);
            }
        );
        }
        $(".mega-menu-simple .dropdown").hoverIntent(
            function () {
                $(this).attr("aria-expanded", !0);
            },
            function () {
                $(this).attr("aria-expanded", !1);
            }
        );
        $(".mega-simple-menu-column-with-list").hoverIntent(
            function () {
                $(this).attr("aria-expanded", !0);
            },
            function () {
                $(this).attr("aria-expanded", !1);
            }
        );
        $(".mega-menu-simple .dropdown").on("focusin", function () {
            $(this).attr("aria-expanded", !0);
        });
        $(".mega-menu-simple .dropdown").on("focusout", function () {
            $(this).attr("aria-expanded", !1);
        });
        $(function () {
            $(".mega-yamm-menu > li").each(function (z) {
                if ($("ul", this).length && $("ul", this).hasClass("lr_auto")) {
                    $(this).children().removeClass("l_auto");
                    z = $("ul:first", this);
                    var w = z.offset().left,
                        C = z.width();
                    $(window).height();
                    var K = $(window).width() - 2;
                    !(w + C <= K) && 992 < K ? z.addClass("l_auto") : z.removeClass("l_auto");
                }
                $(window).resize(function () {
                    $(".mega-yamm-menu > li").each(function (U) {
                        if ($("ul", this).length && $("ul", this).hasClass("lr_auto")) {
                            $(this).children().removeClass("l_auto");
                            U = $("ul:first", this);
                            var T = U.offset().left,
                                S = U.width();
                            $(window).height();
                            var t = $(window).width() - 2;
                            !(T + S <= t) && 992 < t ? U.addClass("l_auto") : U.removeClass("l_auto");
                        }
                    });
                });
            });
        });
        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) &&
            768 <= $(window).width() &&
            ($(document).on("click", ".dropdown.yamm-fw > a", function (z) {
                if (!$(this).closest("li").hasClass("opened_mega_menu") && "true" == $(this).closest("li").attr("aria-haspopup"))
                    return (
                        $(".opened_mega_menu").each(function () {
                            $(this).removeClass("opened_mega_menu");
                        }),
                        $(this).closest("li").addClass("opened_mega_menu"),
                        $("html").on("touchend", function (w) {
                            0 == $(w.target).parents(".mega-yamm-menu").length &&
                                ($(".opened_mega_menu").each(function () {
                                    $(this).removeClass("opened_mega_menu");
                                }),
                                $(this).unbind(w));
                        }),
                        z.preventDefault(),
                        !1
                    );
            }),
            $(document).on("click", ".mega-menu-simple .dropdown > a", function (z) {
                if (!$(this).closest("li").hasClass("opened_mega_menu") && "true" == $(this).closest("li").attr("aria-haspopup"))
                    return (
                        $(".opened_mega_menu").each(function () {
                            $(this).removeClass("opened_mega_menu");
                        }),
                        $(this).closest("li").addClass("opened_mega_menu"),
                        $("html").on("touchend", function (w) {
                            0 == $(w.target).parents(".mega-menu-simple").length &&
                                ($(".opened_mega_menu").each(function () {
                                    $(this).removeClass("opened_mega_menu");
                                }),
                                $(this).unbind(w));
                        }),
                        z.preventDefault(),
                        !1
                    );
            }),
            $(document).on("click", ".mega-simple-menu-column-with-list >.nav-mega-section-title > a", function (z) {
                if (!$(this).closest("div").hasClass("opened_mega_menu") && "true" == $(this).closest("div").attr("aria-haspopup"))
                    return (
                        $(".mega-simple-menu-column-with-list.opened_mega_menu").each(function () {
                            $(this).removeClass("opened_mega_menu");
                        }),
                        $(this).closest("div").addClass("opened_mega_menu"),
                        $("html").on("touchend", function (w) {
                            0 == $(w.target).parents(".mega-menu-simple").length &&
                                ($(".mega-simple-menu-column-with-list.opened_mega_menu").each(function () {
                                    $(this).removeClass("opened_mega_menu");
                                }),
                                $(this).unbind(w));
                        }),
                        z.preventDefault(),
                        !1
                    );
            }));
        initPushyMenu();
        bindEventsInModalCart();
        $(".search-modal-popup").on("click", function () {
            Shopify.showSearchModal();
        });
        $(".cart-modal-popup").on("click", function () {
            window.location = "/cart";
        });
    };
})();
Shopify.showSearchModal = function () {
    $.magnificPopup.open({
        items: { src: "#nav-search-dialog", type: "inline" },
        mainClass: "mfp-move-from-top",
        removalDelay: 500,
        callbacks: {
            beforeOpen: function () {
                container.addClass("blured");
                $("body").addClass("y-hid");
            },
            open: function () {
                container.addClass("blured");
            },
            beforeClose: function () {
                container.removeClass("blured");
            },
            close: function () {},
            afterClose: function () {
                $("body").removeClass("y-hid");
            },
        },
        midClick: !0,
    });
};
theme.PopupSection = (function () {
    return function (a) {
        var b = (this.$container = $(a));
        this.sectionId = b.attr("data-section-id");
        a = 1e3 * b.attr("data-delay");
        var e = b.attr("data-cookie"),
            g = b.attr("data-enabled"),
            f = !1;
        b.find("form").on("submit", function () {
            event.preventDefault();
            $.cookie("pop_confirm", "pop_newsletter", { expires: 1 * e });
            $(this).off("submit").submit();
        });
        b.click(function (d) {
            0 === b.find(".modal-content").has(d.target).length && $("#myModal").modal("hide");
        });
        null == $.cookie("pop_confirm") || ("?customer_posted=true" != window.location.search && "#contact_form" != window.location.hash && !b.find("form .errors").length) || (f = !0);
        if ("true" == g && 0 > window.location.href.indexOf("challenge")) {
            function d() {
                $("#myModal").modal();
                $("#myModal").on("hidden.bs.modal", function () {
                    $.cookie("pop", "modal", { expires: 1 * e });
                    $.cookie("pop_confirm", null);
                });
            }
            $("#myModal").on("hidden.bs.modal", function () {
                $("body").attr("tabindex", "0");
                $("body").focus();
            });
            if (null == $.cookie("pop") || "use_test_popup" == e || f)
                window.setTimeout(d, a),
                    ("use_test_popup" == e && f) || $.cookie("pop", "modal", { expires: 1 * e }),
                    f &&
                        ($.cookie("pop_confirm", null),
                        $("#shopify-section-footer .errors").hide(),
                        $(".newsletter_hero__inner .errors").hide(),
                        b.find("form .errors").length || b.find("form").html('<div class="alert alert-success">Thanks for subscribing to our newsletter!</div>'),
                        window.setTimeout(d, a),
                        window.history.replaceState(null, null, window.location.pathname));
        }
    };
})();
theme.PopupSection.prototype = _.assignIn({}, theme.PopupSection.prototype, {
    onUnload: function () {
        $("#myModal").modal("hide");
    },
});
theme.FeturedCollectionSection = (function () {
    return function (a) {
        var b = (this.$container = $(a));
        a = $("#container");
        a = this.sectionId = b.attr("data-section-id");
        800 < $(window).width() &&
            b.find(".showInfoOnHover .animationOnHoverBlock").each(function () {
                var e = $(this).outerHeight(),
                    g = $(this).find("h5").outerHeight() - 32;
                e = e - g - 20;
                $(this).css("transform", "translateY(" + e + "px)");
            });
        $(window).resize(function () {
            if (800 < $(window).width()) {
                var e = b.find(".showInfoOnHover .animationOnHoverBlock");
                e.each(function () {
                    var g = $(this).outerHeight(),
                        f = $(this).find("h5").outerHeight() - 32;
                    g = g - f - 20;
                    $(this).css("transform", "translateY(" + g + "px)");
                });
            } else
                (e = b.find(".showInfoOnHover .animationOnHoverBlock")),
                    e.each(function () {
                        $(this).removeAttr("style");
                    });
        });
        initQuickView(a);
        b.find(".product-thumb-caption-title").on("click", function () {
            var e = $(this).closest(".product-thumb").find(".product-thumb-href").attr("href");
            window.location.href = e;
        });
        enabledQuickView();
    };
})();
theme.FeturedCollectionSection.prototype = _.assignIn({}, theme.FeturedCollectionSection.prototype, {
    onSelect: function () {
        var a = $.magnificPopup.instance;
        "undefined" !== typeof a && a.close();
    },
});
theme.SearchSection = (function () {
    return function (a) {
        this.sectionId = (this.$container = $(a)).attr("data-section-id");
    };
})();
theme.SearchSection.prototype = _.assignIn({}, theme.SearchSection.prototype, {
    onSelect: function () {
        updatePageHeaderView();
    },
});
theme.CollectionsListSection = (function () {
    return function (a) {
        a = this.$container = $(a);
        this.sectionId = a.attr("data-section-id");
        a.find(".product-thumb").matchHeight();
        a.find(".product-thumb-caption-title").on("click", function () {
            var b = $(this).closest(".product-thumb").find(".product-thumb-href").attr("href");
            window.location.href = b;
        });
    };
})();
theme.CollectionsListSection.prototype = _.assignIn({}, theme.CollectionsListSection.prototype, {
    onSelect: function () {
        updatePageHeaderView();
    },
});
theme.BlogPostsSection = (function () {
    return function (a) {
        a = this.$container = $(a);
        inlineSwiper(a);
    };
})();
theme.BlogPageSection = (function () {
    return function (a) {
        a = this.$container = $(a);
        this.sectionId = a.attr("data-section-id");
        a.find(".blog_text_wrapper").matchHeight();
        a.find(".blog-post").matchHeight();
    };
})();
theme.BlogPageSection.prototype = _.assignIn({}, theme.BlogPageSection.prototype, {
    onSelect: function () {
        updatePageHeaderView();
    },
});
theme.ArticlePageSection = (function () {
    return function (a) {
        a = this.$container = $(a);
        this.sectionId = a.attr("data-section-id");
        a.find(".blog-post-body iframe").length && a.find(".blog-post-body iframe").wrap("<div class='videoWrapperRTE'></div>");
    };
})();
theme.ArticlePageSection.prototype = _.assignIn({}, theme.ArticlePageSection.prototype, {
    onSelect: function () {
        updatePageHeaderView();
    },
});
theme.FeaturedCollectionsSection = (function () {
    return function (a) {
        a = this.$container = $(a);
        this.sectionId = a.attr("data-section-id");
        a.find(".product-thumb").matchHeight();
        a.find(".product-thumb-caption-title").on("click", function () {
            var b = $(this).closest(".product-thumb").find(".product-thumb-href").attr("href");
            window.location.href = b;
        });
    };
})();
theme.Maps = (function () {
    function a(q) {
        this.$container = $(q);
        this.$map = this.$container.find(h.map);
        this.key = this.$map.data("api-key");
        "object" !== typeof this.key &&
            ("loaded" === g
                ? this.createMap()
                : (f.push(this),
                  "loading" !== g &&
                      ((g = "loading"),
                      "undefined" === typeof window.google &&
                          $.getScript("https://maps.googleapis.com/maps/api/js?key=" + this.key).then(function () {
                              g = "loaded";
                              b();
                          }))));
    }
    function b() {
        $.each(f, function (q, r) {
            r.createMap();
        });
    }
    function e(q) {
        var r = $.Deferred(),
            y = new google.maps.Geocoder();
        q = q.data("address-setting");
        y.geocode({ address: q }, function (x, F) {
            F !== google.maps.GeocoderStatus.OK && r.reject(F);
            r.resolve(x);
        });
        return r;
    }
    var g = null,
        f = [];
    if (void 0 != theme.strings) {
        var d = theme.strings.addressNoResults;
        var c = theme.strings.addressQueryLimit;
        var k = theme.strings.addressError;
        var n = theme.strings.authError;
    }
    var h = { section: '[data-section-type="map"]', map: "[data-map]", mapOverlay: "[data-map-overlay]" };
    window.gm_authFailure = function () {
        Shopify.designMode && ($(h.section).addClass("map-section--load-error"), $(h.map).remove(), $(h.mapOverlay).after('<div class="map-section__error errors text-center">' + theme.strings.authError + "</div>"));
    };
    a.prototype = _.assignIn({}, a.prototype, {
        createMap: function () {
            var q = this.$map;
            return e(q)
                .then(
                    function (r) {
                        r = { zoom: 14, center: r[0].geometry.location, draggable: !1, clickableIcons: !1, scrollwheel: !1, disableDoubleClickZoom: !0, disableDefaultUI: !0 };
                        var y = (this.mapStyle = new google.maps.StyledMapType(
                                [
                                    { featureType: "all", elementType: "labels.text.fill", stylers: [{ saturation: 36 }, { color: "#333333" }, { lightness: 40 }] },
                                    { featureType: "all", elementType: "labels.text.stroke", stylers: [{ visibility: "on" }, { color: "#ffffff" }, { lightness: 16 }] },
                                    { featureType: "all", elementType: "labels.icon", stylers: [{ visibility: "off" }] },
                                    { featureType: "administrative", elementType: "geometry", stylers: [{ hue: "#0072ff" }] },
                                    { featureType: "administrative", elementType: "geometry.fill", stylers: [{ color: "#fefefe" }, { lightness: 20 }] },
                                    { featureType: "administrative", elementType: "geometry.stroke", stylers: [{ color: "#fefefe" }, { lightness: 17 }, { weight: 1.2 }] },
                                    { featureType: "administrative", elementType: "labels", stylers: [{ lightness: "0" }] },
                                    { featureType: "administrative.country", elementType: "labels", stylers: [{ visibility: "on" }] },
                                    { featureType: "administrative.neighborhood", elementType: "all", stylers: [{ visibility: "simplified" }] },
                                    { featureType: "administrative.neighborhood", elementType: "labels", stylers: [{ lightness: "50" }] },
                                    { featureType: "landscape", elementType: "geometry", stylers: [{ color: "#f5f5f5" }, { lightness: 20 }] },
                                    { featureType: "landscape.man_made", elementType: "all", stylers: [{ color: "#f2f2f2" }] },
                                    { featureType: "landscape.natural.landcover", elementType: "geometry", stylers: [{ visibility: "on" }] },
                                    { featureType: "poi", elementType: "all", stylers: [{ visibility: "on" }, { saturation: "16" }] },
                                    { featureType: "poi", elementType: "geometry", stylers: [{ color: "#e3e3e3" }, { lightness: 21 }, { visibility: "on" }] },
                                    { featureType: "poi", elementType: "labels.text", stylers: [{ visibility: "simplified" }, { saturation: "-81" }, { lightness: "27" }] },
                                    { featureType: "poi", elementType: "labels.icon", stylers: [{ visibility: "simplified" }, { saturation: "-64" }] },
                                    { featureType: "poi.park", elementType: "geometry", stylers: [{ color: "#b0d5b9" }, { lightness: 21 }] },
                                    { featureType: "road.highway", elementType: "geometry.fill", stylers: [{ color: "#ffffff" }, { lightness: 17 }] },
                                    { featureType: "road.highway", elementType: "geometry.stroke", stylers: [{ color: "#ffffff" }, { lightness: 29 }, { weight: 0.2 }] },
                                    { featureType: "road.arterial", elementType: "geometry", stylers: [{ color: "#ffffff" }, { lightness: 18 }] },
                                    { featureType: "road.local", elementType: "geometry", stylers: [{ color: "#ffffff" }, { lightness: 16 }] },
                                    { featureType: "transit", elementType: "geometry", stylers: [{ color: "#f2f2f2" }, { lightness: 19 }] },
                                    { featureType: "water", elementType: "geometry", stylers: [{ color: "#a3c6d8" }, { lightness: 17 }] },
                                ],
                                { name: "Styled Map" }
                            )),
                            x = (this.map = new google.maps.Map(q[0], r)),
                            F = (this.center = x.getCenter());
                        new google.maps.Marker({ map: x, position: x.getCenter() });
                        x.mapTypes.set("styled_map", y);
                        x.setMapTypeId("styled_map");
                        google.maps.event.addDomListener(
                            window,
                            "resize",
                            $.debounce(250, function () {
                                google.maps.event.trigger(x, "resize");
                                x.setCenter(F);
                                q.removeAttr("style");
                            })
                        );
                    }.bind(this)
                )
                .fail(function () {
                    switch (status) {
                        case "ZERO_RESULTS":
                            var r = d;
                            break;
                        case "OVER_QUERY_LIMIT":
                            r = c;
                            break;
                        case "REQUEST_DENIED":
                            r = n;
                            break;
                        default:
                            r = k;
                    }
                    Shopify.designMode &&
                        q
                            .parent()
                            .addClass("map-section--load-error")
                            .html('<div class="map-section__error errors text-center">' + r + "</div>");
                });
        },
        onUnload: function () {
            0 !== this.$map.length && google.maps.event.clearListeners(this.map, "resize");
        },
        onSelect: function () {
            updatePageHeaderView();
        },
    });
    return a;
})();
theme.PasswordSection = (function () {
    return function (a) {
        $(".js-toggle-login-modal").magnificPopup({
            type: "inline",
            mainClass: "mfp-fade",
            closeOnBgClick: !1,
            closeBtnInside: !1,
            closeOnContentClick: !1,
            tClose: "translation missing: en.general.password_page.close",
            removalDelay: 500,
            callbacks: {
                open: function () {
                    window.setTimeout(function () {
                        document.getElementById("password").focus();
                    }, 50);
                },
                close: function () {
                    window.setTimeout(function () {
                        document.getElementById("email").focus();
                    }, 50);
                },
            },
        });
        $(".storefront-password-form .errors").size() && $(".js-toggle-login-modal").click();
    };
})();
theme.FooterSection = (function () {
    return function (a) {
        function b() {
            var g = $(".footer-bottom-flex-row .col-md-6").first().outerHeight(),
                f = $(".footer-bottom-flex-row").first().outerHeight();
            g != f ? $(".footer-bottom-flex-row").addClass("wrapped") : $(".footer-bottom-flex-row").removeClass("wrapped");
        }
        var e = (this.$container = $(a));
        e.find("[data-disclosure-locale]").length && new theme.Disclosure(e.find("[data-disclosure-locale]"));
        e.find("[data-disclosure-currency]").length && new theme.Disclosure(e.find("[data-disclosure-currency]"));
        b();
        $(window).resize(function () {
            b();
        });
        e.find("form").on("submit", function () {
            event.preventDefault();
            $.cookie("footer_confirm", "newsletter", { expires: 2e3 });
            $(this).off("submit").submit();
        });
        null != $.cookie("footer_confirm") &&
            ("?customer_posted=true" == window.location.search || "#contact_form" == window.location.hash || e.find("form .errors").length) &&
            0 > window.location.href.indexOf("challenge") &&
            ($.cookie("footer_confirm", null),
            window.history.replaceState(null, null, window.location.pathname),
            $(".newsletter_hero__inner .errors").hide(),
            e.find("form .errors").length || e.find("form").html('<div class="alert alert-success">Thanks for subscribing to our newsletter!</div>'),
            (a = (e.find("form").closest(".footer-col").offset().top / 1e3) * 150),
            $("html, body").animate({ scrollTop: e.find("form").closest(".footer-col").offset().top }, a, function () {
                if (e.find("form").closest(".footer-col").offset().top > $(window).scrollTop() && $(window).scrollTop() + $(window).height() < $(document).height()) {
                    var g = ((e.find("form").closest(".footer-col").offset().top - $(window).scrollTop()) / 1e3) * 150;
                    $("html, body").animate({ scrollTop: e.find("form").closest(".footer-col").offset().top }, g);
                }
            }));
    };
})();
theme.ColumnsSliderSection = (function () {
    return function (a) {
        function b() {
            992 < $(window).width()
                ? $(".hero-item-" + e).hover(function () {
                      var f = $(this),
                          d = f.attr("data-hero-item");
                      d = $(d);
                      $(".hero-item-" + e).each(function () {
                          $(this).removeClass("active");
                          $(this).removeClass("hover");
                      });
                      $(".hero-item-bg-" + e).each(function () {
                          $(this).removeClass("active");
                      });
                      d.addClass("active");
                      f.addClass("active");
                  })
                : g.init();
        }
        this.$container = $(a);
        var e = (this.sectionId = $(a).attr("data-section-id"));
        a = +$(a).attr("data-slidesSpeed");
        var g = new Swiper("#swiper-" + e, { direction: "horizontal", loop: !0, simulateTouch: !0, pagination: { el: "#swiper-pagination-" + e, clickable: !0 }, autoplay: a ? { delay: 1e3 * a } : !1, autoHeight: !0, init: !1 });
        b();
        $(window).resize(b);
    };
})();
theme.SlideshowSection = (function () {
    return function (a) {
        var b = (this.$container = $(a));
        a = this.sectionId = b.attr("data-section-id");
        this.swiperEnabled = $("#swiper-main-" + a).length;
        b = 1e3 * b.attr("data-slidesSpeed");
        b = 0 < b ? { delay: +b } : !1;
        if (1 < $("#swiper-main-" + a + " .swiper-slide").length)
            var e = !0,
                g = !0;
        else g = e = !1;
        this.mySwiper = new Swiper("#swiper-main-" + a, {
            navigation: { nextEl: "#swiper-button-next-" + a, prevEl: "#swiper-button-prev-" + a },
            direction: "horizontal",
            loop: e,
            simulateTouch: g,
            pagination: { el: "#swiper-pagination-" + a, clickable: !0 },
            autoplay: b,
            autoHeight: !0,
        });
    };
})();
theme.SlideshowSection.prototype = _.assignIn({}, theme.SlideshowSection.prototype, {
    onBlockSelect: function (a) {
        a = $(a.target).data("index");
        var b = this.mySwiper;
        b.slideTo(a, 1500, !1);
        b.autoplay.stop();
    },
    onBlockDeselect: function () {
        this.mySwiper.autoplay.start();
    },
});
theme.customerTemplates = (function () {
    function a() {
        $("#RecoverPassword").on("click", function (e) {
            e.preventDefault();
            b();
        });
        $("#HideRecoverPasswordLink").on("click", function (e) {
            e.preventDefault();
            b();
        });
    }
    function b() {
        $("#RecoverPasswordForm").toggleClass("hide");
        $("#CustomerLoginForm").toggleClass("hide");
    }
    return {
        init: function () {
            "#recover" === window.location.hash && b();
            a();
            $(".reset-password-success").length && $("#ResetSuccess").removeClass("hide");
        },
    };
})();
function initQuickView(a) {
    a = $("[data-section-id='" + a + "']");
    if (768 <= $(window).width())
        a.find(".quick-view-btn").on("click", function (b) {
            if ($(this).hasClass("quick-view-btn-opened")) {
                setTimeout(function () {
                    swiperCarousel.destroy(!0, !0);
                    "object" == typeof swiperCarouselThumbs && swiperCarouselThumbs.destroy(!0, !0);
                }, 400);
                $(this).removeClass("quick-view-btn-opened");
                var e = $(this).closest(".collection-row").width();
                b = $(this).closest(".collection-row");
                var g = $(this).closest(".collection-products-wrapper"),
                    f = g.outerWidth() - 1;
                e = ~~(e / f);
                f = g.index();
                var d = (f % e) + 1,
                    c = b.find(".collection-products-wrapper").eq(f + e - d);
                c.length || (c = b.find(".collection-products-wrapper").last());
                b = g.find(".quick-view-panel").find(".row-col-norsp").outerHeight() + 24;
                var k = c.outerHeight() - b;
                setTimeout(function () {
                    c.css("height", k).removeClass("quickViewColumnOpened");
                }, 100);
                setTimeout(function () {
                    $(".showTriangle").removeClass("showTriangle");
                }, 400);
                setTimeout(function () {
                    $(window).trigger("scroll");
                }, 500);
            } else (b = $(this).attr("data-product-id")), $(this).attr("data-slider-type"), (g = $(this).data("url")), $(this), $("#quick-view-panel-inner-" + b).load(g, function (n) {});
        });
}
function enabledQuickView() {
    if ("function" === typeof $().magnificPopup) {
        var a = $("a.quick-view-btn");
        a.length &&
            a.each(function () {
                var b = $(this).data("product-id"),
                    e = $(this).attr("data-product-id"),
                    g = $(this).attr("data-slider-type");
                $(this).data("url");
                var f = $(this);
                $(this).magnificPopup({
                    type: "ajax",
                    closeOnContentClick: !1,
                    mainClass: "mfp-move-from-top",
                    removalDelay: 1e3,
                    callbacks: {
                        elementParse: function (d) {
                            -1 == d.src.indexOf("nav-shopping-cart-dialog") && (d.src = d.src.split("?")[0] + "?view=quickview");
                        },
                        ajaxContentAdded: function () {
                            $($.magnificPopup.instance.st.el).attr("href");
                            var d = $(".mfp-move-from-top").find(".SingleOptionSelector-0");
                            "undefined" != typeof SPR &&
                                SPR.$(document).ready(function () {
                                    return SPR.registerCallbacks(), SPR.initRatingHandler(), SPR.initDomEls(), SPR.loadProducts(), SPR.loadBadges();
                                });
                            openQuickViewPanel(f, g, e);
                            prepareQuickViewPanel(e, b);
                            d.length && d.trigger("change");
                        },
                    },
                });
            });
    }
}
function prepareQuickViewPanel(a, b) {
    var e = $("#product-quickview-" + a);
    if ($("#ProductQuickViewJson-" + a).html()) {
        e.find(".swatch :radio").on("change", function () {
            var r = jQuery(this).closest(".swatch").attr("data-option-index"),
                y = jQuery(this)
                    .val()
                    .replace(/\s{2,}/g, " ");
            jQuery(this).closest("form").find(".single-option-selector").eq(r).val(y).trigger("change");
        });
        e.find("form[action*='/cart/add']").on("submit", function (r) {});
        var g = JSON.parse(document.getElementById("ProductQuickViewJson-" + a).innerHTML);
        $(".quick-view-selector-" + g.id).on("change", function () {
            var r = $(this).closest("form"),
                y = g.variants,
                x = r.find(".SingleOptionSelector-0").val() || null,
                F = r.find(".SingleOptionSelector-1").val() || null;
            r = r.find(".SingleOptionSelector-2").val() || null;
            for (var L = !0, z = 0, w = y.length; z < w; z++) {
                var C = y[z];
                null != C.option1 && (C.option1 = C.option1.replace(/\s{2,}/g, " "));
                null != C.option2 && (C.option2 = C.option2.replace(/\s{2,}/g, " "));
                null != C.option3 && (C.option3 = C.option3.replace(/\s{2,}/g, " "));
                if (x == C.option1 && F == C.option2 && r == C.option3) {
                    L = !1;
                    $("#VQProductSelect-" + g.id).val(C.id);
                    quickViewSelectCallback(C, g.id);
                    break;
                }
            }
            L && quickViewSelectCallback(null, g.id);
        });
        var f = e.find(".single-option-selector");
        setTimeout(function () {
            f.select2({ theme: "classic", minimumResultsForSearch: Infinity });
        }, 100);
        g.variants.length && 0 <= g.variants[0].title.indexOf("Default") && e.find(".selector-wrapper").hide();
        b = 0;
        for (var d = g.variants.length; b < d; b++) {
            var c = g.variants[b];
            if (c.available)
                for (var k = 0, n = c.options.length; k < n; k++) {
                    var h = c.options[k];
                    h = handleizeStr(h);
                    e.find('.swatch[data-option-index="' + k + '"] .' + h)
                        .removeClass("soldout")
                        .addClass("available")
                        .find(":radio")
                        .removeAttr("disabled");
                }
        }
        var q = [];
        b = g.variants;
        $("[data-id=" + g.id + "] .single-option-selector option:selected").each(function () {
            q.push($(this).index());
        });
        e = jQuery("#VQProductSelect-" + g.id).closest("form");
        d = jQuery("#VQProductSelect-" + g.id + " option:selected").index();
        if (0 <= d) for (d = b[d], b = 0, d = d.options.length; b < d; b++) (c = q[b]), (c = e.find('.swatch[data-option-index="' + b + '"] div.swatch-element')[c]), (c = $(c).find(":radio")), c.size() && (c.get(0).checked = !0);
        initQuantityEvents(a);
    }
}
function openQuickViewPanel(a, b, e) {
    setTimeout(function () {
        var g = $("#quick-view-panel-inner-" + e);
        g.find("[data-product-media-type-video]").each(function () {
            var d = $(this);
            theme.ProductVideo.init(d, e);
        });
        theme.ProductVideo.youtubeApiLoaded && theme.ProductVideo.loadVideos(theme.ProductVideo.hosts.youtube);
        var f = $("[data-product-media-type-model]", g);
        0 < f.length && theme.ProductModel.init(f, e);
        $(document).on("shopify_xr_launch", function () {
            g.find(".main-swiper-container .swiper-slide-active").trigger("xrLaunch");
        });
        swiperCarousel = new Swiper(".swiper-main-" + e, {
            direction: "horizontal",
            pagination: { el: ".swiper-pagination-" + e, clickable: !0 },
            simulateTouch: !1,
            updateOnImagesReady: !0,
            on: {
                transitionEnd: function () {
                    var d = this.activeIndex,
                        c = $(this.$el).find(".swiper-slide").eq(d).find("[data-product-single-media-wrapper]");
                    $(".main-swiper-container").find("[data-product-single-media-wrapper]").trigger("mediaHidden").removeAttr("style");
                    c.css("visibility", "visible").trigger("mediaVisible");
                    if (theme.Helpers.isTouch()) return !1;
                    c.find("model-viewer").length
                        ? c.find("model-viewer").focus()
                        : c.find("[tabindex='0']").length
                        ? c.find("[tabindex]").focus()
                        : setTimeout(function () {
                              c.focus();
                          }, 100);
                },
            },
        });
        g.on("keyup", ".swiper-pagination-bullet", function (d) {
            if (13 === d.keyCode) {
                var c = g.find(".main-swiper-container")[0].swiper;
                if ("object" == typeof c) {
                    var k = c.activeIndex;
                    d = $(document.activeElement).index();
                    var n = g.find(".swiper-slide-active").index();
                    d == n &&
                        setTimeout(function () {
                            var h = $(c.$el).find(".swiper-slide").eq(k).find("[data-product-single-media-wrapper]");
                            h.trigger("mediaVisible");
                            h.find("model-viewer").length ? h.find("model-viewer").focus() : h.find("[tabindex='0']").length ? h.find("[tabindex='0']").focus() : h.focus();
                        }, 300);
                }
            }
        });
        g.on("click", ".swiper-pagination-bullet", function (d) {
            if (theme.Helpers.isTouch()) return !1;
            var c = g.find(".main-swiper-container")[0].swiper;
            if ("object" == typeof c) {
                var k = c.activeIndex;
                d = $(this).index();
                var n = g.find(".swiper-slide-active").index();
                d != n ||
                    c.animating ||
                    setTimeout(function () {
                        var h = $(c.$el).find(".swiper-slide").eq(k).find("[data-product-single-media-wrapper]");
                        h.trigger("mediaVisible");
                        h.find("model-viewer").length ? h.find("model-viewer").focus() : h.find("[tabindex='0']").length ? h.find("[tabindex='0']").focus() : h.focus();
                    }, 300);
            }
        });
    }, 500);
}
function initQuantityEvents(a) {
    $(".btn-number-" + a).click(function (b) {
        b.preventDefault();
        fieldName = $(this).attr("data-field");
        type = $(this).attr("data-type");
        b = $(this).closest(".product-form__item--quantity").find("input[name='quantity']");
        var e = parseInt(b.val());
        isNaN(e) ? b.val(0) : "minus" == type ? 0 < e && b.val(e - 1).change() : "plus" == type && b.val(e + 1).change();
    });
    $(".input-number-" + a).focusin(function () {
        $(this).data("oldValue", $(this).val());
    });
    $(".input-number-" + a).change(function () {
        minValue = 0;
        maxValue = 999;
        valueCurrent = parseInt($(this).val());
        name = $(this).attr("name");
        valueCurrent >= minValue ? $(".btn-number[data-type='minus'][data-field='" + name + "']").removeAttr("disabled") : $(this).val($(this).data("oldValue"));
        valueCurrent <= maxValue ? $(".btn-number[data-type='plus'][data-field='" + name + "']").removeAttr("disabled") : $(this).val($(this).data("oldValue"));
    });
    $(".input-number-" + a).keydown(function (b) {
        -1 !== $.inArray(b.keyCode, [46, 8, 9, 27, 13, 190]) ||
            (65 == b.keyCode && !0 === b.ctrlKey) ||
            (35 <= b.keyCode && 39 >= b.keyCode) ||
            ((b.shiftKey || 48 > b.keyCode || 57 < b.keyCode) && (96 > b.keyCode || 105 < b.keyCode) && b.preventDefault());
    });
}
function updatePageHeaderView() {
    var a = $("header.page-header"),
        b = $("#top-header-section").data("hero-size"),
        e = $("#top-header-section").data("menu-type"),
        g = $("#top-header-section").data("index-overlap");
    a.length &&
        (a.removeClass("hero--xs-small"),
        a.removeClass("hero--l-small"),
        a.removeClass("hero--l-medium"),
        a.addClass(b),
        g &&
            ("mega" == e || "mega_simple" == e
                ? ((b = $(".collection-page-header-title").outerHeight()),
                  992 < $(window).width()
                      ? ((g = $(".nav-standard").outerHeight()),
                        (b = b + g + 175),
                        $(".page-header-nav").length && ((g = $(".page-header-nav").outerHeight()), (b += g), a.css("padding-bottom", g + 35 + "px")),
                        a.css("min-height", b + "px"))
                      : 767 < $(window).width()
                      ? ((g = $(".nav-standard-middle").outerHeight()),
                        (b = b + g + 55),
                        $(".page-header-nav").length && ((g = $(".page-header-nav").outerHeight()), (b += g), a.css("padding-bottom", g + "px")),
                        a.css("min-height", b + "px"))
                      : $(".page-header-nav").length && ((g = $(".page-header-nav").outerHeight()), a.css("padding-bottom", g + 50 + "px")))
                : "left" == e
                ? ((b = $(".collection-page-header-title").outerHeight()),
                  767 < $(window).width()
                      ? ((g = $(" .nav-main-logo").outerHeight()),
                        (b = b + g + 85),
                        $(".page-header-nav").length && ((g = $(".page-header-nav").outerHeight()), (b += g), a.css("padding-bottom", g + "px"), a.css("justify-content", "center")),
                        a.css("min-height", b + "px"))
                      : $(".page-header-nav").length && ((g = $(".page-header-nav").outerHeight()), a.css("padding-bottom", g + 50 + "px")))
                : ((b = $(".collection-page-header-title").outerHeight()),
                  767 < $(window).width()
                      ? ((g = $(".minimal-top-nav").outerHeight()),
                        (b = b + g + 85),
                        $(".page-header-nav").length && ((g = $(".page-header-nav").outerHeight()), (b += g), a.css("padding-bottom", g + "px"), a.css("justify-content", "center")),
                        a.css("min-height", b + "px"))
                      : $(".page-header-nav").length && ((g = $(".page-header-nav").outerHeight()), a.css("padding-bottom", g + 50 + "px"))),
            $(window).resize(function () {
                if ("mega" == e || "mega_simple" == e) {
                    var f = $(".collection-page-header-title").outerHeight();
                    if (992 < $(window).width()) {
                        var d = $(".nav-standard").outerHeight();
                        f = f + d + 55;
                        $(".page-header-nav").length && ((d = $(".page-header-nav").outerHeight()), (f += d), a.css("padding-bottom", d + 35 + "px"), a.css("justify-content", "flex-end"));
                        a.css("min-height", f + "px");
                    } else
                        767 < $(window).width()
                            ? ((d = $(".nav-standard-middle").outerHeight()),
                              (f = f + d + 55),
                              $(".page-header-nav").length && ((d = $(".page-header-nav").outerHeight()), (f += d), a.css("padding-bottom", d + "px"), a.css("justify-content", "center")),
                              a.css("min-height", f + "px"))
                            : ($(".page-header-nav").length && ((d = $(".page-header-nav").outerHeight()), a.css("padding-bottom", d + 50 + "px")), a.css("min-height", 0));
                } else "left" == e ? ((f = $(".collection-page-header-title").outerHeight()), 767 < $(window).width() ? ((d = $(" .nav-main-logo").outerHeight()), (f = f + d + 85), $(".page-header-nav").length && ((d = $(".page-header-nav").outerHeight()), (f += d), a.css("padding-bottom", d + "px"), a.css("justify-content", "center")), a.css("min-height", f + "px")) : ($(".page-header-nav").length && ((d = $(".page-header-nav").outerHeight()), a.css("padding-bottom", d + 50 + "px")), a.css("min-height", 0))) : ((f = $(".collection-page-header-title").outerHeight()), 767 < $(window).width() ? ((d = $(".minimal-top-nav").outerHeight()), (f = f + d + 85), $(".page-header-nav").length && ((d = $(".page-header-nav").outerHeight()), (f += d), a.css("padding-bottom", d + "px"), a.css("justify-content", "center")), a.css("min-height", f + "px")) : ($(".page-header-nav").length && ((d = $(".page-header-nav").outerHeight()), a.css("padding-bottom", d + 50 + "px")), a.css("min-height", 0)));
            })));
}
jQuery(document).ready(function () {
    Shopify.afterCartUpdate = function (a) {
        var b = a.item_count,
            e = Shopify.formatMoney(a.total_price, theme.moneyFormat),
            g = Shopify.formatMoney(a.total_discount, theme.moneyFormat);
        0 < a.item_count
            ? ($(".count-items").text(b).removeClass("hidden"),
              $(".nav-cart-dialog-total-amount").html(e),
              $(".order-discount--cart-total").find(".money").html(g),
              $(".total-items-price").html(e).removeClass("hidden"),
              Shopify.updateExpressPayments())
            : ($(".count-items").text("").addClass("hidden"), $(".total-items-price").text("").addClass("hidden"));
    };
    Shopify.updateExpressPayments = function (a = 1500) {
        if ("/cart" === window.location.pathname) window.Shopify && Shopify.StorefrontExpressButtons && setTimeout(Shopify.StorefrontExpressButtons.initialize, a);
        else {
            var b = $(".nav-dialog-inner-cart");
            b.length &&
                (($additionCheckoutBlock = b.find("#additional-checkout-block")),
                $additionCheckoutBlock.load("/cart #addCheckoutBtn", function () {
                    window.Shopify && Shopify.StorefrontExpressButtons && setTimeout(Shopify.StorefrontExpressButtons.initialize, a);
                }));
        }
    };
    Shopify.showModal = function () {
        $.magnificPopup.open({
            items: { src: "#nav-shopping-cart-dialog", type: "inline" },
            mainClass: "mfp-move-from-top",
            removalDelay: 500,
            fixedContentPos: !0,
            fixedBgPos: !0,
            callbacks: {
                beforeOpen: function () {
                    container.addClass("blured");
                    $("body").addClass("y-hid");
                },
                open: function () {
                    container.addClass("blured");
                    Shopify.updateExpressPayments(30);
                },
                beforeClose: function () {
                    container.removeClass("blured");
                },
                close: function () {},
                afterClose: function () {
                    $("body").removeClass("y-hid");
                },
            },
            midClick: !0,
        });
    };
    Shopify.updateQuickCart = function (a) {
        var b = $(".modal-cart-form").length,
            e = Shopify.formatMoney(a.total_price, theme.moneyFormat);
        if (a.items.length && b)
            $("#modal-cart-table").load("/cart?" + new Date().getTime() + " #cart-page-table", function () {
                $(this).find("#cart-page-table").children(":first").unwrap();
            });
        else if (a.items.length && !b) {
            var g = "",
                f = (b = "");
            g = a.note;
            null == g && (g = "");
            b = "-with-notes";
            g =
                '<a role="button" data-toggle="collapse" href="#cartNotesCollapse" aria-expanded="false" aria-controls="cartNotesCollapse" class="cart-notes-title">Add order notes</a><div class="collapse" id="cartNotesCollapse"><textarea name="note" id="CartSpecialInstructions" class="cart-notes" rows="6" placeholder="Add a note to your order">' +
                g +
                "</textarea></div>";
            if (a.cart_level_discount_applications.length)
                for (var d = 0; d < a.cart_level_discount_applications.length; d++)
                    (f = Shopify.formatMoney(a.cart_level_discount_applications[d].total_allocated_amount, theme.moneyFormat)),
                        (f =
                            '<p class="order-discount-cart-wrapper"><span class="order-discount--cart total_val"><svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-saletag"><path d="M10 3a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm0-3H7a1 1 0 0 0-.71.29l-6 6a1 1 0 0 0 0 1.42l4 4a1 1 0 0 0 1.42 0c.19-.2 5.8-5.81 6-6A1 1 0 0 0 12 5V2a2 2 0 0 0-2-2z"/></svg>' +
                            a.cart_level_discount_applications[d].title +
                            ':</span><span class="order-discount--cart-total"> (-<span class="money">' +
                            f +
                            "</span>)</span></p>");
            checkOutRow =
                '<div class="cart-total-wrapper"><div class="row"><div class="col-sm-6">' +
                f +
                '<p class="cart-total ' +
                b +
                '"> <span class="sign">Subtotal</span>  <span class="money nav-cart-dialog-total-amount">' +
                e +
                "</span></p>" +
                g +
                '</div><div class="col-sm-6"><div class="cart-checkout-bts"><div class="clearfix"><button type="submit" name="checkout" class="cart-checkout-btn checkout-btn btn btn-primary btn-lg">Checkout</button></div></div></div></div></div><div id="additional-checkout-block"></div>';
            $(".nav-dialog-inner-cart").html("").append('<h2 class="nav-cart-dialog-title">My shopping cart</h2>').append('<form action="/cart" method="post" novalidate class="modal-cart-form"></form>');
            $(".modal-cart-form").load("/cart?" + new Date().getTime() + " #cart-page-table", function () {
                $(this).find("#cart-page-table").attr("id", "modal-cart-table");
                $(this).append(checkOutRow);
                Shopify.updateExpressPayments(0);
            });
        } else
            $(".modal-cart-form")
                .hide()
                .load("/cart .empty-page-content", function () {
                    $(this).children(":first").unwrap();
                })
                .fadeIn();
        console.log("from modal update");
    };
    Shopify.loadQuickCart = function (a) {
        Shopify.updateQuickCart(a);
        Shopify.afterCartUpdate(a);
        Shopify.showModal();
    };
    Shopify.updateCart = function (a) {
        a.items.length
            ? $(".main-cart-form").load("/cart?" + new Date().getTime() + " .main-cart-form", function () {
                  $(this).children(":first").unwrap();
              })
            : $(".main-cart-form")
                  .hide()
                  .load("/cart .empty-page-content", function () {
                      $(this).children(":first").unwrap();
                  })
                  .fadeIn();
        Shopify.afterCartUpdate(a);
    };
    Shopify.increaseQty = function (a) {
        var b = a.closest(".table-shopping-qty").find("input");
        a = b.val();
        a++;
        var e = a,
            g = b.data("id");
        Shopify.changeItem(g, e, function (f) {
            var d = f.items.filter(function (c) {
                return c.variant_id == g;
            });
            d.length && d[0].quantity == e
                ? (b.val(e), Shopify.updateCart(f), Shopify.updateQuickCart(f))
                : jQuery(".ajaxcart__item__" + g + "__errors")
                      .show()
                      .delay(3e3)
                      .fadeOut();
        });
    };
    Shopify.changeInputQty = function (a) {
        var b = a.closest("tr"),
            e = a.val(),
            g = a.data("id");
        0 == e
            ? Shopify.removeItem(g, function (f) {
                  b.fadeOut("slow", function () {
                      Shopify.updateCart(f);
                      Shopify.updateQuickCart(f);
                  });
              })
            : Shopify.changeItem(g, e, function (f) {
                  var d = f.items.filter(function (c) {
                      return c.variant_id == g;
                  });
                  d.length && d[0].quantity == e
                      ? (Shopify.updateCart(f), Shopify.updateQuickCart(f))
                      : jQuery(".ajaxcart__item__" + g + "__errors")
                            .show()
                            .delay(3e3)
                            .fadeOut();
              });
    };
    Shopify.decreaseQty = function (a) {
        var b = a.closest(".table-shopping-qty").find("input"),
            e = a.closest("tr");
        a = b.val();
        a--;
        0 > a && (a = 0);
        var g = a,
            f = b.data("id");
        0 != g
            ? (b.val(a),
              Shopify.changeItem(f, g, function (d) {
                  Shopify.updateCart(d);
                  Shopify.updateQuickCart(d);
              }))
            : Shopify.removeItem(f, function (d) {
                  e.fadeOut("slow", function () {
                      Shopify.updateCart(d);
                      Shopify.updateQuickCart(d);
                  });
              });
    };
    Shopify.removeItemFromCart = function (a) {
        var b = a.data("id") || null,
            e = a.closest("tr");
        Shopify.removeItem(b, function (g) {
            e.fadeOut("slow", function () {
                Shopify.updateCart(g);
                Shopify.updateQuickCart(g);
            });
        });
    };
});
var bindEventsInModalCart = function () {
        $additionCheckoutBlock = $(".nav-dialog-inner-cart").find("#additional-checkout-block");
        $additionCheckoutBlock.load("/cart #addCheckoutBtn", function () {
            window.Shopify && Shopify.StorefrontExpressButtons && Shopify.StorefrontExpressButtons.initialize();
        });
        $(".nav-dialog-inner-cart").on("change", ".cart__qty-input", function () {
            Shopify.changeInputQty($(this));
        });
        $(".nav-dialog-inner-cart").on("click", ".table-shopping-qty-plus", function () {
            Shopify.increaseQty($(this));
        });
        $(".nav-dialog-inner-cart").on("click", ".table-shopping-qty-minus", function () {
            Shopify.decreaseQty($(this));
        });
        $(".nav-dialog-inner-cart").on("click", ".cart-remove-btn", function (a) {
            a.preventDefault();
            Shopify.removeItemFromCart($(this));
        });
        $(".nav-dialog-inner-cart").on("click", ".btn_close", function () {
            var a = $.magnificPopup.instance;
            "undefined" !== typeof a && a.close();
        });
        $(".nav-dialog-inner-cart").on("focusout", "textarea", function () {
            var a = $(this).val(),
                b = $(".cart-notes");
            Shopify.updateCartNote(a, function () {
                $(b).each(function () {
                    $(this).val(a);
                    $(this).text(a);
                });
            });
        });
    },
    bindEventsInCart = function () {
        $(".cart-content").on("change", ".cart__qty-input", function () {
            Shopify.changeInputQty($(this));
        });
        $(".cart-content").on("click", ".table-shopping-qty-plus", function () {
            Shopify.increaseQty($(this));
        });
        $(".cart-content").on("click", ".table-shopping-qty-minus", function () {
            Shopify.decreaseQty($(this));
        });
        $(".cart-content").on("click", ".cart-remove-btn", function (a) {
            a.preventDefault();
            Shopify.removeItemFromCart($(this));
        });
        $(".cart-content").on("click", ".btn_close", function () {
            window.location.href = "/collections/all";
        });
        $(".cart-content").on("focusout", "textarea", function () {
            var a = $(this).val(),
                b = $(".cart-notes");
            Shopify.updateCartNote(a, function () {
                $(b).each(function () {
                    $(this).val(a);
                    $(this).text(a);
                });
            });
        });
    };
theme.RelatedProductSection = (function () {
    return function (a) {
        var b = (this.$container = $(a)),
            e = b.attr("data-section-id"),
            g = b.attr("data-productsPerRow");
        a = this.$container.data("baseUrl");
        var f = document.querySelector(".product-recommendations");
        if (null != f) {
            var d = new XMLHttpRequest();
            d.open("GET", a + "?section_id=product-recommendations&limit=" + f.dataset.limit + "&product_id=" + f.dataset.productId);
            d.onload = function () {
                if (200 <= d.status && 300 > d.status) {
                    var c = document.createElement("div");
                    c.innerHTML = d.response;
                    f.innerHTML = c.querySelector(".product-recommendations").innerHTML;
                    "undefined" != typeof checkShopifyFormatMoney && checkShopifyFormatMoney();
                    new Swiper(".swiper-products-" + e, {
                        direction: "horizontal",
                        pagination: !1,
                        loop: !1,
                        slidesPerView: 2,
                        navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" },
                        breakpoints: { 992: { slidesPerView: g, loop: !1 }, 768: { slidesPerView: 3, loop: !1 } },
                        autoplay: 3e3,
                    });
                    b.find(".product-thumb-caption-title").on("click", function () {
                        var k = $(this).closest(".product-thumb").find(".product-thumb-href").attr("href");
                        window.location.href = k;
                    });
                } else $(".recommendation_content").hide();
            };
            d.send();
        }
    };
})();
theme.init = function () {
    $('a[href="#"]').on("click", function (a) {
        a.preventDefault();
    });
    theme.customerTemplates.init();
};
$(theme.init);
theme.Helpers = (function () {
    var a = !1;
    return {
        setTouch: function () {
            a = !0;
            $("body").addClass("body-touch-device");
        },
        isTouch: function () {
            return a;
        },
    };
})();
function onYouTubeIframeAPIReady() {
    theme.ProductVideo.loadVideos(theme.ProductVideo.hosts.youtube);
    theme.ProductVideo.youtubeApiLoaded = !0;
}
theme.ProductVideo = (function () {
    function a(k) {
        if (k) for (var n in g) g.hasOwnProperty(n) && ((k = g[n]), k.nativeVideo || k.host !== f.html5 || (k.element.setAttribute("controls", "controls"), (k.nativeVideo = !0)));
        else e(f.html5);
    }
    function b(k) {
        if (!k.player) {
            var n = k.container.closest(d.productMediaWrapper),
                h = n.data(c.enableVideoLooping);
            switch (k.host) {
                case f.html5:
                    k.player = new Shopify.Plyr(k.element, { loop: { active: h } });
                    break;
                case f.youtube:
                    var q = n.data(c.videoId);
                    k.player = new YT.Player(k.element, {
                        videoId: q,
                        events: {
                            onStateChange: function (r) {
                                0 === r.data && h && r.target.seekTo(0);
                            },
                        },
                    });
            }
            n.on("mediaHidden xrLaunch", function () {
                k.player && (k.host === f.html5 && k.player.pause(), k.host === f.youtube && k.player.pauseVideo && k.player.pauseVideo());
            });
            n.on("mediaVisible", function () {
                theme.Helpers.isTouch() || (console.log(k), k.player && (k.host === f.html5 && k.player.play(), k.host === f.youtube && k.player.playVideo && k.player.playVideo()));
            });
        }
    }
    function e(k) {
        for (var n in g)
            if (g.hasOwnProperty(n)) {
                var h = g[n];
                h.host === k && h.ready();
            }
    }
    var g = {},
        f = { html5: "html5", youtube: "youtube" },
        d = { productMediaWrapper: "[data-product-single-media-wrapper]" },
        c = { enableVideoLooping: "enable-video-looping", videoId: "video-id" };
    return {
        init: function (k, n) {
            if (k.length) {
                var h = k.find("iframe, video")[0],
                    q = k.data("mediaId");
                if (h) {
                    var r = "VIDEO" === h.tagName ? f.html5 : "IFRAME" === h.tagName && /^(https?:\/\/)?(www\.)?(youtube\.com|youtube-nocookie\.com|youtu\.?be)\/.+$/.test(h.src) ? f.youtube : null;
                    g[q] = {
                        mediaId: q,
                        sectionId: n,
                        host: r,
                        container: k,
                        element: h,
                        ready: function () {
                            b(this);
                        },
                    };
                    switch (g[q].host) {
                        case f.html5:
                            window.Shopify.loadFeatures([{ name: "video-ui", version: "1.0", onLoad: a }]);
                            theme.LibraryLoader.load("plyrShopifyStyles");
                            break;
                        case f.youtube:
                            $("#youtube-sdk").length || theme.LibraryLoader.load("youtubeSdk");
                    }
                }
            }
        },
        hosts: f,
        loadVideos: e,
        removeSectionVideos: function (k) {
            for (var n in g)
                if (g.hasOwnProperty(n)) {
                    var h = g[n];
                    h.sectionId === k && (h.player && h.player.destroy(), delete g[n]);
                }
        },
    };
})();
theme.ProductModel = (function () {
    function a(c) {
        if (!c)
            if (window.ShopifyXR) {
                for (var k in g)
                    if (g.hasOwnProperty(k) && ((c = g[k]), !c.loaded)) {
                        var n = $("#ModelJson-" + k);
                        window.ShopifyXR.addModels(JSON.parse(n.html()));
                        c.loaded = !0;
                    }
                window.ShopifyXR.setupXRElements();
            } else
                document.addEventListener("shopify_xr_initialized", function () {
                    a();
                });
    }
    function b(c) {
        if (!c) for (var k in f) f.hasOwnProperty(k) && ((c = f[k]), c.modelViewerUi || (c.modelViewerUi = new Shopify.ModelViewerUI(c.$element)), e(c));
    }
    function e(c) {
        var k = d[c.sectionId];
        c.$container.on("mediaVisible", function () {
            k.$element.attr("data-shopify-model3d-id", c.modelId);
            theme.Helpers.isTouch() || c.modelViewerUi.play();
        });
        c.$container
            .on("mediaHidden", function () {
                k.$element.attr("data-shopify-model3d-id", k.defaultId);
                c.modelViewerUi.pause();
            })
            .on("xrLaunch", function () {
                c.modelViewerUi.pause();
            });
        $(c.modelViewerUi.viewer).on("shopify_model_viewer_ui_toggle_play", function () {
            $(c.modelViewerUi.viewer).closest(".main-swiper-container")[0].swiper.allowTouchMove = !1;
        });
        $(c.modelViewerUi.viewer).on("shopify_model_viewer_ui_toggle_pause", function () {
            $(c.modelViewerUi.viewer).closest(".main-swiper-container")[0].swiper.allowTouchMove = !0;
        });
    }
    var g = {},
        f = {},
        d = {};
    return {
        init: function (c, k) {
            g[k] = { loaded: !1 };
            c.each(function (n) {
                var h = $(this),
                    q = h.data("media-id"),
                    r = $(h.find("model-viewer")[0]),
                    y = r.data("model-id");
                0 === n && ((n = h.closest("[data-product-single-media-group]").find("[data-shopify-xr]")), (d[k] = { $element: n, defaultId: y }));
                f[q] = { modelId: y, sectionId: k, $container: h, $element: r };
            });
            window.Shopify.loadFeatures([
                { name: "shopify-xr", version: "1.0", onLoad: a },
                { name: "model-viewer-ui", version: "1.0", onLoad: b },
            ]);
            theme.LibraryLoader.load("modelViewerUiStyles");
        },
        removeSectionModels: function (c) {
            for (var k in f) f.hasOwnProperty(k) && f[k].sectionId === c && (f[k].modelViewerUi.destroy(), delete f[k]);
            delete g[c];
        },
    };
})();
theme.Disclosure = (function () {
    function a(b) {
        this.$container = b;
        this.cache = {};
        this._cacheSelectors();
        this._connectOptions();
        this._connectToggle();
        this._onFocusOut();
    }
    a.prototype = _.assignIn({}, a.prototype, {
        _cacheSelectors: function () {
            this.cache = {
                $disclosureList: this.$container.find("[data-disclosure-list]"),
                $disclosureToggle: this.$container.find("[data-disclosure-toggle]"),
                $disclosureInput: this.$container.find("[data-disclosure-input]"),
                $disclosureOptions: this.$container.find("[data-disclosure-option]"),
            };
        },
        _connectToggle: function () {
            this.cache.$disclosureToggle.on(
                "click",
                function (b) {
                    var e = "true" === $(b.currentTarget).attr("aria-expanded");
                    $(b.currentTarget).attr("aria-expanded", !e);
                    this.cache.$disclosureList.toggleClass("disclosure-list--visible");
                }.bind(this)
            );
        },
        _connectOptions: function () {
            this.cache.$disclosureOptions.on(
                "click",
                function (b) {
                    this._submitForm($(b.currentTarget).data("value"));
                }.bind(this)
            );
        },
        _onFocusOut: function () {
            this.cache.$disclosureToggle.on(
                "focusout",
                function (b) {
                    0 === this.$container.has(b.relatedTarget).length && this._hideList();
                }.bind(this)
            );
            this.cache.$disclosureList.on(
                "focusout",
                function (b) {
                    b = 0 < $(b.currentTarget).has(b.relatedTarget).length;
                    this.cache.$disclosureList.hasClass("disclosure-list--visible") && !b && this._hideList();
                }.bind(this)
            );
            this.$container.on(
                "keyup",
                function (b) {
                    "27" === b.which && (this._hideList(), this.cache.$disclosureToggle.focus());
                }.bind(this)
            );
            this.bodyOnClick = function (b) {
                b = 0 < this.$container.has(b.target).length;
                this.cache.$disclosureList.hasClass("disclosure-list--visible") && !b && this._hideList();
            }.bind(this);
            $("body").on("click", this.bodyOnClick);
        },
        _submitForm: function (b) {
            this.cache.$disclosureInput.val(b);
            this.$container.parents("form").submit();
        },
        _hideList: function () {
            this.cache.$disclosureList.removeClass("disclosure-list--visible");
            this.cache.$disclosureToggle.attr("aria-expanded", !1);
        },
        unload: function () {
            $("body").off("click", this.bodyOnClick);
            this.cache.$disclosureOptions.off();
            this.cache.$disclosureToggle.off();
            this.cache.$disclosureList.off();
            this.$container.off();
        },
    });
    return a;
})();
$(document).ready(function () {
    var a = new theme.Sections();
    a.register("cart-template", theme.Cart);
    a.register("product-page", theme.ProductPage);
    a.register("collection-template", theme.CollectionPage);
    a.register("header-section", theme.HeaderSection);
    a.register("popup-section", theme.PopupSection);
    a.register("map", theme.Maps);
    a.register("slideshow-section", theme.SlideshowSection);
    a.register("columns-slider-section", theme.ColumnsSliderSection);
    a.register("fetured-collection-section", theme.FeturedCollectionSection);
    a.register("search-section", theme.SearchSection);
    a.register("collections-list-section", theme.CollectionsListSection);
    a.register("featured-collections-section", theme.FeaturedCollectionsSection);
    a.register("twitter-section", theme.TwitterSection);
    a.register("image-bar-section", theme.ImageBarSection);
    a.register("logo-section", theme.LogoSection);
    a.register("quotes-section", theme.Quotes);
    a.register("rich-text-section", theme.RichTextSection);
    a.register("video-section", theme.VideoSection);
    a.register("blog-posts-section", theme.BlogPostsSection);
    a.register("blog-page-section", theme.BlogPageSection);
    a.register("article-page-section", theme.ArticlePageSection);
    a.register("footer-section", theme.FooterSection);
    a.register("password-section", theme.PasswordSection);
    a.register("related-products", theme.RelatedProductSection);
    a.register("newsletter-section", theme.NewsletterSection);
    $(document).on("shopify:section:select", function (b) {
        var e = $(b.target);
        b = $("#shopify-section-handle-" + b.originalEvent.detail.sectionId);
        (b = b.length ? b.attr("data-bg-type") : null) && e.addClass(b);
    });
});
var SPRCallbacks = {
    onReviewsLoad: function () {
        $.fn.matchHeight._update();
    },
};
$(document).one("touchstart", function () {
    theme.Helpers.setTouch();
});



